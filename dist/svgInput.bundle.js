!function(s){var e={};function r(l){if(e[l])return e[l].exports;var o=e[l]={i:l,l:!1,exports:{}};return s[l].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=s,r.c=e,r.d=function(s,e,l){r.o(s,e)||Object.defineProperty(s,e,{enumerable:!0,get:l})},r.r=function(s){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(s,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(s,"__esModule",{value:!0})},r.t=function(s,e){if(1&e&&(s=r(s)),8&e)return s;if(4&e&&"object"==typeof s&&s&&s.__esModule)return s;var l=Object.create(null);if(r.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:s}),2&e&&"string"!=typeof s)for(var o in s)r.d(l,o,function(e){return s[e]}.bind(null,o));return l},r.n=function(s){var e=s&&s.__esModule?function(){return s.default}:function(){return s};return r.d(e,"a",e),e},r.o=function(s,e){return Object.prototype.hasOwnProperty.call(s,e)},r.p="",r(r.s=12)}([function(s,e,r){(function(r){var l,o,c;o=[],void 0===(c="function"==typeof(l=function(){"use strict";function e(s,e,r){var l=new XMLHttpRequest;l.open("GET",s),l.responseType="blob",l.onload=function(){u(l.response,e,r)},l.onerror=function(){console.error("could not download file")},l.send()}function l(s){var e=new XMLHttpRequest;return e.open("HEAD",s,!1),e.send(),200<=e.status&&299>=e.status}function o(s){try{s.dispatchEvent(new MouseEvent("click"))}catch(r){var e=document.createEvent("MouseEvents");e.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),s.dispatchEvent(e)}}var c="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof r&&r.global===r?r:void 0,u=c.saveAs||("object"!=typeof window||window!==c?function(){}:"download"in HTMLAnchorElement.prototype?function(s,r,u){var n=c.URL||c.webkitURL,y=document.createElement("a");r=r||s.name||"download",y.download=r,y.rel="noopener","string"==typeof s?(y.href=s,y.origin===location.origin?o(y):l(y.href)?e(s,r,u):o(y,y.target="_blank")):(y.href=n.createObjectURL(s),setTimeout(function(){n.revokeObjectURL(y.href)},4e4),setTimeout(function(){o(y)},0))}:"msSaveOrOpenBlob"in navigator?function(s,r,c){if(r=r||s.name||"download","string"!=typeof s)navigator.msSaveOrOpenBlob(function(s,e){return void 0===e?e={autoBom:!1}:"object"!=typeof e&&(console.warn("Deprecated: Expected third argument to be a object"),e={autoBom:!e}),e.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(s.type)?new Blob(["\ufeff",s],{type:s.type}):s}(s,c),r);else if(l(s))e(s,r,c);else{var u=document.createElement("a");u.href=s,u.target="_blank",setTimeout(function(){o(u)})}}:function(s,r,l,o){if((o=o||open("","_blank"))&&(o.document.title=o.document.body.innerText="downloading..."),"string"==typeof s)return e(s,r,l);var u="application/octet-stream"===s.type,n=/constructor/i.test(c.HTMLElement)||c.safari,y=/CriOS\/[\d]+/.test(navigator.userAgent);if((y||u&&n)&&"object"==typeof FileReader){var f=new FileReader;f.onloadend=function(){var s=f.result;s=y?s:s.replace(/^data:[^;]*;/,"data:attachment/file;"),o?o.location.href=s:location=s,o=null},f.readAsDataURL(s)}else{var d=c.URL||c.webkitURL,g=d.createObjectURL(s);o?o.location=g:location.href=g,o=null,setTimeout(function(){d.revokeObjectURL(g)},4e4)}});c.saveAs=u.saveAs=u,s.exports=u})?l.apply(e,o):l)||(s.exports=c)}).call(this,r(2))},function(s,e,r){"use strict";var l={CircleDiameter:5,InitialClusterType:"Random",WalkerSource:"Random",MaxWalkers:5e3,EdgeMargin:0,PruneOldWalkers:!1,MaxAge:30,ReplenishWalkers:!1,PruneDistantWalkers:!1,MaxWanderDistance:20,VaryDiameterByDistance:!1,VaryDiameterRandomly:!1,ShowClusters:!0,ShowWalkers:!0,ShowShapes:!0,BiasTowards:"",BiasForce:1,UsePerWalkerBias:!0,UseFrame:!0,FrameSize:900,CaptureLines:!0,RenderMode:"Shapes",UseStroke:!1,UseColors:!1,BackgroundColor:{h:230,s:20,b:40},WalkerColor:{h:200,s:30,b:44},ClusterColor:{h:30,s:70,b:80},ShapeColor:{h:100,s:50,b:80},LineColor:{h:10,s:70,b:100},FrameColor:{h:0,s:100,b:100}};const o=[];class c{constructor(){this._bvh_parent=null,this._bvh_branch=!0,this._bvh_left=null,this._bvh_right=null,this._bvh_sort=0,this._bvh_min_x=0,this._bvh_min_y=0,this._bvh_max_x=0,this._bvh_max_y=0}static getBranch(){return o.length?o.pop():new c}static releaseBranch(s){o.push(s)}static sortBranches(s,e){return s.sort>e.sort?-1:1}}class u{constructor(){this._hierarchy=null,this._bodies=[],this._dirty_branches=[]}insert(s,e=!1){if(!e){const e=s._bvh;if(e&&e!==this)throw new Error("Body belongs to another collision system");s._bvh=this,this._bodies.push(s)}const r=s._polygon,l=s.x,o=s.y;r&&(s._dirty_coords||s.x!==s._x||s.y!==s._y||s.angle!==s._angle||s.scale_x!==s._scale_x||s.scale_y!==s._scale_y)&&s._calculateCoords();const u=s._bvh_padding,n=r?0:s.radius*s.scale,y=(r?s._min_x:l-n)-u,f=(r?s._min_y:o-n)-u,d=(r?s._max_x:l+n)+u,g=(r?s._max_y:o+n)+u;s._bvh_min_x=y,s._bvh_min_y=f,s._bvh_max_x=d,s._bvh_max_y=g;let w=this._hierarchy,p=0;if(w)for(;;){if(!w._bvh_branch){const e=w._bvh_parent,r=w._bvh_min_x,l=w._bvh_min_y,o=w._bvh_max_x,u=w._bvh_max_y,n=w._bvh_parent=s._bvh_parent=c.getBranch();n._bvh_parent=e,n._bvh_left=w,n._bvh_right=s,n._bvh_sort=p++,n._bvh_min_x=y<r?y:r,n._bvh_min_y=f<l?f:l,n._bvh_max_x=d>o?d:o,n._bvh_max_y=g>u?g:u,e?e._bvh_left===w?e._bvh_left=n:e._bvh_right=n:this._hierarchy=n;break}{const s=w._bvh_left,e=s._bvh_min_y,r=s._bvh_max_x,l=s._bvh_max_y,o=y<s._bvh_min_x?y:s._bvh_min_x,c=f<e?f:e,u=d>r?d:r,n=g>l?g:l,T=(u-o)*(n-c)-(r-s._bvh_min_x)*(l-e),O=w._bvh_right,v=O._bvh_min_x,b=O._bvh_min_y,m=O._bvh_max_x,k=O._bvh_max_y,C=y<v?y:v,E=f<b?f:b,x=d>m?d:m,M=g>k?g:k,R=(x-C)*(M-E)-(m-v)*(k-b);w._bvh_sort=p++,w._bvh_min_x=o<C?o:C,w._bvh_min_y=c<E?c:E,w._bvh_max_x=u>x?u:x,w._bvh_max_y=n>M?n:M,w=T<=R?s:O}}else this._hierarchy=s}remove(s,e=!1){if(!e){const e=s._bvh;if(e&&e!==this)throw new Error("Body belongs to another collision system");s._bvh=null,this._bodies.splice(this._bodies.indexOf(s),1)}if(this._hierarchy===s)return void(this._hierarchy=null);const r=s._bvh_parent,l=r._bvh_parent,o=r._bvh_left,u=o===s?r._bvh_right:o;if(u._bvh_parent=l,u._bvh_branch&&(u._bvh_sort=r._bvh_sort),l){l._bvh_left===r?l._bvh_left=u:l._bvh_right=u;let s=l;for(;s;){const e=s._bvh_left,r=e._bvh_min_x,l=e._bvh_min_y,o=e._bvh_max_x,c=e._bvh_max_y,u=s._bvh_right,n=u._bvh_min_x,y=u._bvh_min_y,f=u._bvh_max_x,d=u._bvh_max_y;s._bvh_min_x=r<n?r:n,s._bvh_min_y=l<y?l:y,s._bvh_max_x=o>f?o:f,s._bvh_max_y=c>d?c:d,s=s._bvh_parent}}else this._hierarchy=u;c.releaseBranch(r)}update(){const s=this._bodies,e=s.length;for(let r=0;r<e;++r){const e=s[r];let l=!1;if(l||e.padding===e._bvh_padding||(e._bvh_padding=e.padding,l=!0),!l){const s=e._polygon;s&&(e._dirty_coords||e.x!==e._x||e.y!==e._y||e.angle!==e._angle||e.scale_x!==e._scale_x||e.scale_y!==e._scale_y)&&e._calculateCoords();const r=e.x,o=e.y,c=s?0:e.radius*e.scale,u=s?e._min_x:r-c,n=s?e._min_y:o-c,y=s?e._max_x:r+c,f=s?e._max_y:o+c;l=u<e._bvh_min_x||n<e._bvh_min_y||y>e._bvh_max_x||f>e._bvh_max_y}l&&(this.remove(e,!0),this.insert(e,!0))}}potentials(s){const e=[],r=s._bvh_min_x,l=s._bvh_min_y,o=s._bvh_max_x,c=s._bvh_max_y;let u=this._hierarchy,n=!0;if(!u||!u._bvh_branch)return e;for(;u;){if(n){n=!1;let s=u._bvh_branch?u._bvh_left:null;for(;s&&s._bvh_max_x>=r&&s._bvh_max_y>=l&&s._bvh_min_x<=o&&s._bvh_min_y<=c;)s=(u=s)._bvh_branch?u._bvh_left:null}const y=u._bvh_branch,f=y?u._bvh_right:null;if(f&&f._bvh_max_x>r&&f._bvh_max_y>l&&f._bvh_min_x<o&&f._bvh_min_y<c)u=f,n=!0;else{y||u===s||e.push(u);let r=u._bvh_parent;if(!r)break;for(;r&&r._bvh_right===u;)r=(u=r)._bvh_parent;u=r}}return e}draw(s){const e=this._bodies,r=e.length;for(let l=0;l<r;++l)e[l].draw(s)}drawBVH(s){let e=this._hierarchy,r=!0;for(;e;){if(r){r=!1;let s=e._bvh_branch?e._bvh_left:null;for(;s;)s=(e=s)._bvh_branch?e._bvh_left:null}const l=e._bvh_branch,o=e._bvh_min_x,c=e._bvh_min_y,u=e._bvh_max_x,n=e._bvh_max_y,y=l?e._bvh_right:null;if(s.moveTo(o,c),s.lineTo(u,c),s.lineTo(u,n),s.lineTo(o,n),s.lineTo(o,c),y)e=y,r=!0;else{let s=e._bvh_parent;if(!s)break;for(;s&&s._bvh_right===e;)s=(e=s)._bvh_parent;e=s}}}}class n{constructor(){this.collision=!1,this.a=null,this.b=null,this.a_in_b=!1,this.a_in_b=!1,this.overlap=0,this.overlap_x=0,this.overlap_y=0}}function y(s,e,r=null,l=!0){const o=s._polygon,c=e._polygon;let u=!1;return r&&(r.a=s,r.b=e,r.a_in_b=!0,r.b_in_a=!0,r.overlap=null,r.overlap_x=0,r.overlap_y=0),o&&(s._dirty_coords||s.x!==s._x||s.y!==s._y||s.angle!==s._angle||s.scale_x!==s._scale_x||s.scale_y!==s._scale_y)&&s._calculateCoords(),c&&(e._dirty_coords||e.x!==e._x||e.y!==e._y||e.angle!==e._angle||e.scale_x!==e._scale_x||e.scale_y!==e._scale_y)&&e._calculateCoords(),l&&!function(s,e){const r=s._polygon,l=r?0:s.x,o=r?0:s.y,c=r?0:s.radius*s.scale,u=r?s._min_x:l-c,n=r?s._min_y:o-c,y=r?s._max_x:l+c,f=r?s._max_y:o+c,d=e._polygon,g=d?0:e.x,w=d?0:e.y,p=d?0:e.radius*e.scale,T=d?e._min_x:g-p,O=d?e._min_y:w-p,v=d?e._max_x:g+p,b=d?e._max_y:w+p;return u<v&&n<b&&y>T&&f>O}(s,e)||(o&&s._dirty_normals&&s._calculateNormals(),c&&e._dirty_normals&&e._calculateNormals(),u=o&&c?function(s,e,r=null){const l=s._coords.length,o=e._coords.length;if(2===l&&2===o){const l=s._coords,o=e._coords;return r&&(r.overlap=0),l[0]===o[0]&&l[1]===o[1]}const c=s._coords,u=e._coords,n=s._normals,y=e._normals;if(l>2)for(let s=0,e=1;s<l;s+=2,e+=2)if(d(c,u,n[s],n[e],r))return!1;if(o>2)for(let s=0,e=1;s<o;s+=2,e+=2)if(d(c,u,y[s],y[e],r))return!1;return!0}(s,e,r):o?f(s,e,r,!1):c?f(e,s,r,!0):function(s,e,r=null){const l=s.radius*s.scale,o=e.radius*e.scale,c=e.x-s.x,u=e.y-s.y,n=l+o,y=c*c+u*u;if(y>n*n)return!1;if(r){const s=Math.sqrt(y);r.a_in_b=l<=o&&s<=o-l,r.b_in_a=o<=l&&s<=l-o,r.overlap=n-s,r.overlap_x=c/s,r.overlap_y=u/s}return!0}(s,e,r)),r&&(r.collision=u),u}function f(s,e,r=null,l=!1){const o=s._coords,c=s._edges,u=s._normals,n=e.x,y=e.y,f=e.radius*e.scale,d=2*f,g=f*f,w=o.length;let p=!0,T=!0,O=null,v=0,b=0;if(2===w){const s=n-o[0],e=y-o[1],l=s*s+e*e;if(l>g)return!1;if(r){const r=Math.sqrt(l);O=f-r,v=s/r,b=e/r,T=!1}}else for(let s=0,e=1;s<w;s+=2,e+=2){const l=n-o[s],m=y-o[e],k=c[s],C=c[e],E=l*k+m*C,x=E<0?-1:E>k*k+C*C?1:0;let M=!1,R=0,N=0,A=0;if(r&&p&&l*l+m*m>g&&(p=!1),x){const e=-1===x,u=e?0===s?w-2:s-2:s===w-2?0:s+2,d=u+1,p=n-o[u],O=y-o[d],v=c[u],b=c[d],k=p*v+O*b;if((k<0?-1:k>v*v+b*b?1:0)===-x){const s=e?l:p,o=e?m:O,c=s*s+o*o;if(c>g)return!1;if(r){const e=Math.sqrt(c);M=!0,R=f-e,N=s/e,A=o/e,T=!1}}}else{const o=u[s],c=u[e],n=l*o+m*c,y=n<0?-n:n;if(n>0&&y>f)return!1;r&&(M=!0,R=f-n,N=o,A=c,(T&&n>=0||R<d)&&(T=!1))}M&&(null===O||O>R)&&(O=R,v=N,b=A)}return r&&(r.a_in_b=l?T:p,r.b_in_a=l?p:T,r.overlap=O,r.overlap_x=l?-v:v,r.overlap_y=l?-b:b),!0}function d(s,e,r,l,o=null){const c=s.length,u=e.length;if(!c||!u)return!0;let n=null,y=null,f=null,d=null;for(let e=0,o=1;e<c;e+=2,o+=2){const c=s[e]*r+s[o]*l;(null===n||n>c)&&(n=c),(null===y||y<c)&&(y=c)}for(let s=0,o=1;s<u;s+=2,o+=2){const c=e[s]*r+e[o]*l;(null===f||f>c)&&(f=c),(null===d||d<c)&&(d=c)}if(n>d||y<f)return!0;if(o){let s=0;if(n<f)if(o.a_in_b=!1,y<d)s=y-f,o.b_in_a=!1;else{const e=y-f,r=d-n;s=e<r?e:-r}else if(o.b_in_a=!1,y>d)s=n-d,o.a_in_b=!1;else{const e=y-f,r=d-n;s=e<r?e:-r}const e=o.overlap,c=s<0?-s:s;if(null===e||e>c){const e=s<0?-1:1;o.overlap=c,o.overlap_x=r*e,o.overlap_y=l*e}}return!1}class g{constructor(s=0,e=0,r=0){this.x=s,this.y=e,this.padding=r,this._circle=!1,this._polygon=!1,this._point=!1,this._bvh=null,this._bvh_parent=null,this._bvh_branch=!1,this._bvh_padding=r,this._bvh_min_x=0,this._bvh_min_y=0,this._bvh_max_x=0,this._bvh_max_y=0}collides(s,e=null,r=!0){return y(this,s,e,r)}potentials(){const s=this._bvh;if(null===s)throw new Error("Body does not belong to a collision system");return s.potentials(this)}remove(){const s=this._bvh;s&&s.remove(this,!1)}createResult(){return new n}static createResult(){return new n}}class w extends g{constructor(s=0,e=0,r=0,l=1,o=0){super(s,e,o),this.radius=r,this.scale=l}draw(s){const e=this.x,r=this.y,l=this.radius*this.scale;s.moveTo(e+l,r),s.arc(e,r,l,0,2*Math.PI)}}class p extends g{constructor(s=0,e=0,r=[],l=0,o=1,c=1,u=0){super(s,e,u),this.angle=l,this.scale_x=o,this.scale_y=c,this._polygon=!0,this._x=s,this._y=e,this._angle=l,this._scale_x=o,this._scale_y=c,this._min_x=0,this._min_y=0,this._max_x=0,this._max_y=0,this._points=null,this._coords=null,this._edges=null,this._normals=null,this._dirty_coords=!0,this._dirty_normals=!0,p.prototype.setPoints.call(this,r)}draw(s){(this._dirty_coords||this.x!==this._x||this.y!==this._y||this.angle!==this._angle||this.scale_x!==this._scale_x||this.scale_y!==this._scale_y)&&this._calculateCoords();const e=this._coords;if(2===e.length)s.moveTo(e[0],e[1]),s.arc(e[0],e[1],1,0,2*Math.PI);else{s.moveTo(e[0],e[1]);for(let r=2;r<e.length;r+=2)s.lineTo(e[r],e[r+1]);e.length>4&&s.lineTo(e[0],e[1])}}setPoints(s){const e=s.length;this._points=new Float64Array(2*e),this._coords=new Float64Array(2*e),this._edges=new Float64Array(2*e),this._normals=new Float64Array(2*e);const r=this._points;for(let l=0,o=0,c=1;l<e;++l,o+=2,c+=2){const e=s[l];r[o]=e[0],r[c]=e[1]}this._dirty_coords=!0}_calculateCoords(){const s=this.x,e=this.y,r=this.angle,l=this.scale_x,o=this.scale_y,c=this._points,u=this._coords,n=c.length;let y,f,d,g;for(let w=0,p=1;w<n;w+=2,p+=2){let n=c[w]*l,T=c[p]*o;if(r){const s=Math.cos(r),e=Math.sin(r),l=n;n=l*s-T*e,T=l*e+T*s}n+=s,T+=e,u[w]=n,u[p]=T,0===w?(y=f=n,d=g=T):(n<y?y=n:n>f&&(f=n),T<d?d=T:T>g&&(g=T))}this._x=s,this._y=e,this._angle=r,this._scale_x=l,this._scale_y=o,this._min_x=y,this._min_y=d,this._max_x=f,this._max_y=g,this._dirty_coords=!1,this._dirty_normals=!0}_calculateNormals(){const s=this._coords,e=this._edges,r=this._normals,l=s.length;for(let o=0,c=1;o<l;o+=2,c+=2){const u=o+2<l?o+2:0,n=s[u]-s[o],y=s[u+1]-s[c],f=n||y?Math.sqrt(n*n+y*y):0;e[o]=n,e[c]=y,r[o]=f?y/f:0,r[c]=f?-n/f:0}this._dirty_normals=!1}}class T extends p{constructor(s=0,e=0,r=0){super(s,e,[[0,0]],0,1,1,r),this._point=!0}}T.prototype.setPoints=void 0;class O{constructor(){this._bvh=new u}createCircle(s=0,e=0,r=0,l=1,o=0){const c=new w(s,e,r,l,o);return this._bvh.insert(c),c}createPolygon(s=0,e=0,r=[[0,0]],l=0,o=1,c=1,u=0){const n=new p(s,e,r,l,o,c,u);return this._bvh.insert(n),n}createPoint(s=0,e=0,r=0){const l=new T(s,e,r);return this._bvh.insert(l),l}createResult(){return new n}static createResult(){return new n}insert(...s){for(const e of s)this._bvh.insert(e,!1);return this}remove(...s){for(const e of s)this._bvh.remove(e,!1);return this}update(){return this._bvh.update(),this}draw(s){return this._bvh.draw(s)}drawBVH(s){return this._bvh.drawBVH(s)}potentials(s){return this._bvh.potentials(s)}collides(s,e,r=null,l=!0){return y(s,e,r,l)}}var v=Object.assign||function(s){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var l in r)Object.prototype.hasOwnProperty.call(r,l)&&(s[l]=r[l])}return s};var b=function(s){var e=s.type,r=function(s,e){var r={};for(var l in s)e.indexOf(l)>=0||Object.prototype.hasOwnProperty.call(s,l)&&(r[l]=s[l]);return r}(s,["type"]);switch(e){case"circle":return m(r);case"ellipse":return k(r);case"line":return C(r);case"path":return A(r);case"polygon":return F(r);case"polyline":return H(r);case"rect":return I(r);case"g":return z(r);default:throw new Error("Not a valid shape type")}},m=function(s){var e=s.cx,r=s.cy,l=s.r;return[{x:e,y:r-l,moveTo:!0},{x:e,y:r+l,curve:{type:"arc",rx:l,ry:l,sweepFlag:1}},{x:e,y:r-l,curve:{type:"arc",rx:l,ry:l,sweepFlag:1}}]},k=function(s){var e=s.cx,r=s.cy,l=s.rx,o=s.ry;return[{x:e,y:r-o,moveTo:!0},{x:e,y:r+o,curve:{type:"arc",rx:l,ry:o,sweepFlag:1}},{x:e,y:r-o,curve:{type:"arc",rx:l,ry:o,sweepFlag:1}}]},C=function(s){var e=s.x1,r=s.x2;return[{x:e,y:s.y1,moveTo:!0},{x:r,y:s.y2}]},E=/[MmLlHhVvCcSsQqTtAaZz]/g,x={A:7,C:6,H:1,L:2,M:2,Q:4,S:4,T:2,V:1,Z:0},M=["a","c","h","l","m","q","s","t","v"],R=function(s){return-1!==M.indexOf(s)},N=["xAxisRotation","largeArcFlag","sweepFlag"],A=function(s){for(var e=s.d,r=function(s){return s.match(E)}(e),l=function(s){return s.split(E).map(function(s){return s.replace(/[0-9]+-/g,function(s){return s.slice(0,-1)+" -"})}).map(function(s){return s.replace(/\.[0-9]+/g,function(s){return s+" "})}).map(function(s){return s.trim()}).filter(function(s){return s.length>0}).map(function(s){return s.split(/[ ,]+/).map(parseFloat).filter(function(s){return!isNaN(s)})})}(e),o=[],c=void 0,u=0,n=r.length;u<n;u++){var y=r[u],f=y.toUpperCase(),d=x[f],g=R(y);if(d>0)for(var w=l.shift(),p=w.length/d,T=0;T<p;T++){var O=o[o.length-1]||{x:0,y:0};switch(f){case"M":var v=(g?O.x:0)+w.shift(),b=(g?O.y:0)+w.shift();0===T?(c={x:v,y:b},o.push({x:v,y:b,moveTo:!0})):o.push({x:v,y:b});break;case"L":o.push({x:(g?O.x:0)+w.shift(),y:(g?O.y:0)+w.shift()});break;case"H":o.push({x:(g?O.x:0)+w.shift(),y:O.y});break;case"V":o.push({x:O.x,y:(g?O.y:0)+w.shift()});break;case"A":o.push({curve:{type:"arc",rx:w.shift(),ry:w.shift(),xAxisRotation:w.shift(),largeArcFlag:w.shift(),sweepFlag:w.shift()},x:(g?O.x:0)+w.shift(),y:(g?O.y:0)+w.shift()});var m=!0,k=!1,C=void 0;try{for(var M,A=N[Symbol.iterator]();!(m=(M=A.next()).done);m=!0){var F=M.value;0===o[o.length-1].curve[F]&&delete o[o.length-1].curve[F]}}catch(s){k=!0,C=s}finally{try{!m&&A.return&&A.return()}finally{if(k)throw C}}break;case"C":o.push({curve:{type:"cubic",x1:(g?O.x:0)+w.shift(),y1:(g?O.y:0)+w.shift(),x2:(g?O.x:0)+w.shift(),y2:(g?O.y:0)+w.shift()},x:(g?O.x:0)+w.shift(),y:(g?O.y:0)+w.shift()});break;case"S":var H=(g?O.x:0)+w.shift(),L=(g?O.y:0)+w.shift(),I=(g?O.x:0)+w.shift(),U=(g?O.y:0)+w.shift(),B={},z=void 0,W=void 0;O.curve&&"cubic"===O.curve.type?(B.x=Math.abs(O.x-O.curve.x2),B.y=Math.abs(O.y-O.curve.y2),z=O.x<O.curve.x2?O.x-B.x:O.x+B.x,W=O.y<O.curve.y2?O.y-B.y:O.y+B.y):(B.x=Math.abs(I-H),B.y=Math.abs(U-L),z=O.x,W=O.y),o.push({curve:{type:"cubic",x1:z,y1:W,x2:H,y2:L},x:I,y:U});break;case"Q":o.push({curve:{type:"quadratic",x1:(g?O.x:0)+w.shift(),y1:(g?O.y:0)+w.shift()},x:(g?O.x:0)+w.shift(),y:(g?O.y:0)+w.shift()});break;case"T":var X=(g?O.x:0)+w.shift(),Q=(g?O.y:0)+w.shift(),Y=void 0,j=void 0;if(O.curve&&"quadratic"===O.curve.type){var Z={x:Math.abs(O.x-O.curve.x1),y:Math.abs(O.y-O.curve.y1)};Y=O.x<O.curve.x1?O.x-Z.x:O.x+Z.x,j=O.y<O.curve.y1?O.y-Z.y:O.y+Z.y}else Y=O.x,j=O.y;o.push({curve:{type:"quadratic",x1:Y,y1:j},x:X,y:Q})}}else{var q=o[o.length-1]||{x:0,y:0};q.x===c.x&&q.y===c.y||o.push({x:c.x,y:c.y})}}return o},F=function(s){var e=s.points;return L({closed:!0,points:e})},H=function(s){var e=s.points;return L({closed:!1,points:e})},L=function(s){var e=s.closed,r=s.points.split(/[\s,]+/).map(function(s){return parseFloat(s)}).reduce(function(s,e,r){return r%2==0?s.push({x:e}):s[(r-1)/2].y=e,s},[]);return e&&r.push(v({},r[0])),r[0].moveTo=!0,r},I=function(s){var e=s.height,r=s.rx,l=s.ry,o=s.width,c=s.x,u=s.y;return r||l?B({height:e,rx:r||l,ry:l||r,width:o,x:c,y:u}):U({height:e,width:o,x:c,y:u})},U=function(s){var e=s.height,r=s.width,l=s.x,o=s.y;return[{x:l,y:o,moveTo:!0},{x:l+r,y:o},{x:l+r,y:o+e},{x:l,y:o+e},{x:l,y:o}]},B=function(s){var e=s.height,r=s.rx,l=s.ry,o=s.width,c=s.x,u=s.y,n={type:"arc",rx:r,ry:l,sweepFlag:1};return[{x:c+r,y:u,moveTo:!0},{x:c+o-r,y:u},{x:c+o,y:u+l,curve:n},{x:c+o,y:u+e-l},{x:c+o-r,y:u+e,curve:n},{x:c+r,y:u+e},{x:c,y:u+e-l,curve:n},{x:c,y:u+l},{x:c+r,y:u,curve:n}]},z=function(s){return s.shapes.map(function(s){return b(s)})},W=b,X=function(s){var e="",r=0,l=void 0,o=!0,c=!1,u=void 0;try{for(var n,y=s[Symbol.iterator]();!(o=(n=y.next()).done);o=!0){var f=n.value,d=f.curve,g=void 0!==d&&d,w=f.moveTo,p=f.x,T=f.y,O=0===r||w,v=r===s.length-1||s[r+1].moveTo,b=0===r?null:s[r-1];if(O)l=f,v||(e+="M"+p+","+T);else if(g){switch(g.type){case"arc":var m=f.curve,k=m.largeArcFlag,C=void 0===k?0:k,E=m.rx,x=m.ry,M=m.sweepFlag,R=void 0===M?0:M,N=m.xAxisRotation;e+="A"+E+","+x+","+(void 0===N?0:N)+","+C+","+R+","+p+","+T;break;case"cubic":var A=f.curve;e+="C"+A.x1+","+A.y1+","+A.x2+","+A.y2+","+p+","+T;break;case"quadratic":var F=f.curve;e+="Q"+F.x1+","+F.y1+","+p+","+T}v&&p===l.x&&T===l.y&&(e+="Z")}else v&&p===l.x&&T===l.y?e+="Z":p!==b.x&&T!==b.y?e+="L"+p+","+T:p!==b.x?e+="H"+p:T!==b.y&&(e+="V"+T);r++}}catch(s){c=!0,u=s}finally{try{!o&&y.return&&y.return()}finally{if(c)throw u}}return e},Q=function(s){var e=Array.isArray(s),r=e?Array.isArray(s[0]):"g"===s.type,l=e?s:r?s.shapes.map(function(s){return W(s)}):W(s);return r?l.map(function(s){return X(s)}):X(l)},Y=("function"==typeof Symbol&&Symbol.iterator,r(0));r.d(e,"a",function(){return j});class j{constructor(s,e){this.p5=s,this.settings=Object.assign({},l,e),this.paused=!1,this.showWalkers=this.settings.ShowWalkers,this.showClusters=this.settings.ShowClusters,this.showShapes=this.settings.ShowShapes,this.useFrame=this.settings.UseFrame,this.renderMode=this.settings.RenderMode,this.numWalkers=0,this.customMovementFunction=void 0,this.edgeMargin=this.settings.EdgeMargin,this.edges={},this.frame={},"number"==typeof this.settings.FrameSize?(this.frame.left=window.innerWidth/2-this.settings.FrameSize/2,this.frame.right=window.innerWidth/2+this.settings.FrameSize/2,this.frame.top=window.innerHeight/2-this.settings.FrameSize/2,this.frame.bottom=window.innerHeight/2+this.settings.FrameSize/2):"object"==typeof this.settings.FrameSize&&(this.frame.left=window.innerWidth/2-this.settings.FrameSize[0]/2,this.frame.right=window.innerWidth/2+this.settings.FrameSize[0]/2,this.frame.top=window.innerHeight/2-this.settings.FrameSize[1]/2,this.frame.bottom=window.innerHeight/2+this.settings.FrameSize[1]/2),this.resetEdges(),this.maxDistance=this.p5.dist(this.edges.left,this.edges.top,window.innerWidth/2,window.innerHeight/2),this.system=new O,this.bodies=[],this.shapes=[],this.lines=[]}iterate(){this.paused||(this.settings.ReplenishWalkers&&this.numWalkers<this.settings.MaxWalkers&&this.createDefaultWalkers(this.settings.MaxWalkers-this.numWalkers,this.settings.ReplenishmentSource),this.moveWalkers(),this.system.update(),this.handleCollisions(),this.pruneWalkers())}draw(){if(this.settings.UseColors?this.p5.background(this.getColorStringFromObject(this.settings.BackgroundColor)):this.p5.background(255),this.showShapes)for(let s of this.shapes){this.settings.UseColors?(this.p5.fill(this.getColorStringFromObject(this.settings.ShapeColor)),this.p5.stroke(this.getColorStringFromObject(this.settings.ShapeColor))):(this.p5.noFill(),this.p5.stroke(100)),this.p5.beginShape();for(let e=0;e<s._coords.length;e+=2)this.p5.vertex(s._coords[e],s._coords[e+1]);this.p5.endShape()}if("Lines"==this.renderMode){if(this.settings.UseColors?this.p5.stroke(this.getColorStringFromObject(this.settings.LineColor)):this.p5.stroke(75),this.lines.length>0)for(let s of this.lines)this.p5.line(s.p1.x,s.p1.y,s.p2.x,s.p2.y)}else for(let s of this.bodies)if(s._point)this.p5.noFill(),s.stuck&&this.showClusters?(this.p5.noStroke(),this.settings.UseColors?this.p5.fill(this.getColorStringFromObject(this.settings.ClusterColor)):this.p5.fill(200),this.p5.ellipse(s.x,s.y,5)):!s.stuck&&this.showWalkers?this.settings.UseColors?this.p5.stroke(this.getColorStringFromObject(this.settings.WalkerColor)):this.p5.stroke(0):this.p5.noStroke(),this.p5.point(s.x,s.y);else if(s._circle)this.settings.UseStroke?this.settings.UseColors?this.p5.stroke(this.getColorStringFromObject(this.settings.BackgroundColor)):this.p5.stroke(255):this.p5.noStroke(),s.stuck&&this.showClusters?this.settings.UseColors?this.p5.fill(this.getColorStringFromObject(this.settings.ClusterColor)):this.p5.fill(120):!s.stuck&&this.showWalkers?this.settings.UseColors?this.p5.fill(this.getColorStringFromObject(this.settings.WalkerColor)):this.p5.fill(230):this.p5.noFill(),this.p5.ellipse(s.x,s.y,2*s.radius);else if(s._polygon){this.settings.UseStroke?this.settings.UseColors?this.p5.stroke(this.getColorStringFromObject(this.settings.BackgroundColor)):this.p5.stroke(255):this.p5.noStroke(),s.stuck&&this.showClusters?this.settings.UseColors?this.p5.fill(this.getColorStringFromObject(this.settings.ClusterColor)):this.p5.fill(120):!s.stuck&&this.showWalkers?this.settings.UseColors?this.p5.fill(this.getColorStringFromObject(this.settings.WalkerColor)):this.p5.fill(230):this.p5.noFill(),this.p5.beginShape();for(let e=0;e<s._coords.length-1;e+=2)this.p5.vertex(s._coords[e],s._coords[e+1]);this.p5.endShape()}this.useFrame&&this.drawFrame()}drawFrame(){this.p5.noFill(),this.settings.UseColors?this.p5.stroke(this.getColorStringFromObject(this.settings.FrameColor)):this.p5.stroke(0),"number"==typeof this.settings.FrameSize?this.p5.rect(window.innerWidth/2-this.settings.FrameSize/2-1,window.innerHeight/2-this.settings.FrameSize/2-1,this.settings.FrameSize+2,this.settings.FrameSize+2):"object"==typeof this.settings.FrameSize&&this.p5.rect(window.innerWidth/2-this.settings.FrameSize[0]/2-1,window.innerHeight/2-this.settings.FrameSize[1]/2-1,this.settings.FrameSize[0]+2,this.settings.FrameSize[1]+2)}resetEdges(){this.edges.left=this.useFrame?this.frame.left:0,this.edges.right=this.useFrame?this.frame.right:window.innerWidth,this.edges.top=this.useFrame?this.frame.top:0,this.edges.bottom=this.useFrame?this.frame.bottom:window.innerHeight}moveWalkers(){if(this.bodies.length>0)for(let s of this.bodies)if(!s.stuck){let e,r=this.p5.random(-1,1),l=this.p5.random(-1,1);if(this.settings.UsePerWalkerBias&&s.hasOwnProperty("BiasTowards"))r+=(e=this.getDeltasTowards(s.x,s.y,s.BiasTowards.x,s.BiasTowards.y)).x,l+=e.y;else switch(this.settings.BiasTowards){case"Top":l-=this.settings.BiasForce;break;case"Bottom":l+=this.settings.BiasForce;break;case"Left":r-=this.settings.BiasForce;break;case"Right":r+=this.settings.BiasForce;break;case"Center":r+=(e=this.getDeltasTowards(s.x,s.y,window.innerWidth/2,window.innerHeight/2)).x,l+=e.y;break;case"Edges":r-=(e=this.getDeltasTowards(s.x,s.y,window.innerWidth/2,window.innerHeight/2)).x,l-=e.y;break;case"Equator":s.y<window.innerHeight/2?l+=this.settings.BiasForce:l-=this.settings.BiasForce;break;case"Meridian":s.x<window.innerWidth/2?r+=this.settings.BiasForce:r-=this.settings.BiasForce}if(null!=typeof this.customMovementFunction&&this.customMovementFunction instanceof Function){let e=this.customMovementFunction(s);r+=e.dx,l+=e.dy}s._point&&(r=Math.round(r),l=Math.round(l)),s.x+=r,s.y+=l,s.age++}}getDeltasTowards(s,e,r,l){let o=Math.atan2(l-e,r-s);return{x:Math.cos(o)*this.settings.BiasForce,y:Math.sin(o)*this.settings.BiasForce}}handleCollisions(){for(let s of this.shapes){const e=s.potentials();for(let r of e)s.collides(r)&&(r.stuck=!0,this.numWalkers--)}for(let s of this.bodies){if(s.stuck)continue;const e=s.potentials();for(let r of e)s._point?r.stuck&&(s.stuck=!0,this.numWalkers--):r.stuck&&s.collides(r)&&(s.stuck=!0,this.numWalkers--,this.settings.CaptureLines&&this.lines.push({p1:{x:s.x,y:s.y},p2:{x:r.x,y:r.y}}))}}pruneWalkers(){if(this.settings.PruneOldWalkers||this.settings.PruneDistantWalkers)for(let[s,e]of this.bodies.entries())!e.stuck&&(this.settings.PruneOldWalkers&&e.age>this.settings.MaxAge||this.settings.PruneDistantWalkers&&this.p5.dist(e.x,e.y,e.originalX,e.originalY)>this.settings.MaxWanderDistance)&&(e.remove(),this.bodies.splice(s,1),this.numWalkers--)}createParticle(s){if(void 0===s||"object"!=typeof s)return;let e;if(s.hasOwnProperty("type"))switch(s.type){case"Point":(e=this.system.createPoint(Math.round(s.x),Math.round(s.y)))._point=!0;break;case"Circle":default:(e=this.system.createCircle(s.x,s.y,s.diameter/2))._circle=!0;break;case"Polygon":(e=this.system.createPolygon(s.x,s.y,s.polygon,s.hasOwnProperty("rotation")?this.p5.radians(s.rotation):0))._polygon=!0}else{const r=s.hasOwnProperty("diameter")?s.diameter:this.settings.CircleDiameter;(e=this.system.createCircle(s.x,s.y,r/2))._circle=!0}e.stuck=!!s.hasOwnProperty("stuck")&&s.stuck,e.age=0,s.hasOwnProperty("BiasTowards")&&(e.BiasTowards=s.BiasTowards),e.originalX=e.x,e.originalY=e.y,this.bodies.push(e)}createWalker(s){this.createParticle(s),this.numWalkers++}createDefaultWalkers(s=this.settings.MaxWalkers,e=this.settings.WalkerSource){for(let r=0;r<s;r++){let s={};switch(e){case"Edges":switch(Math.round(this.p5.random(1,4))){case 1:s.x=this.p5.random(this.edges.left+this.edgeMargin,this.edges.right-this.edgeMargin),s.y=this.p5.random(this.edges.top,this.edges.top+this.edgeMargin);break;case 3:s.x=this.p5.random(this.edges.left+this.edgeMargin,this.edges.right-this.edgeMargin),s.y=this.p5.random(this.edges.bottom-this.edgeMargin,this.edges.bottom);break;case 4:s.x=this.p5.random(this.edges.left,this.edges.left+this.edgeMargin),s.y=this.p5.random(this.edges.top,this.edges.bottom);break;case 2:s.x=this.p5.random(this.edges.right-this.edgeMargin,this.edges.right),s.y=this.p5.random(this.edges.top,this.edges.bottom)}break;case"Circle":let r;switch(typeof this.settings.FrameSize){case"number":r=this.settings.FrameSize/2;break;case"object":r=this.settings.FrameSize[0]>this.settings.FrameSize[1]?this.settings.FrameSize[1]/2:this.settings.FrameSize[0]/2}let l=this.p5.random(5,r),o=this.p5.random(360),c=this.settings.hasOwnProperty("CircleCenter")?this.settings.CircleCenter:{x:window.innerWidth/2,y:window.innerHeight/2};s.x=c.x+l*Math.cos(o*Math.PI/180),s.y=c.y+l*Math.sin(o*Math.PI/180);break;case"Random":s.x=this.p5.random(this.edges.left,this.edges.right),s.y=this.p5.random(this.edges.top,this.edges.bottom);break;case"Center":s.x=window.innerWidth/2,s.y=window.innerHeight/2;break;case"Offscreen":if(s.x=this.p5.random(this.edges.left-200,this.edges.right+200),s.y=this.p5.random(this.edges.top-200,this.edges.bottom+200),s.x>this.edges.left&&s.x<this.edges.right&&s.y>this.edges.top&&s.y<this.edges.bottom)continue}if(this.settings.VaryDiameterByDistance){let e=this.p5.dist(s.x,s.y,window.innerWidth/2,window.innerHeight/2);s.diameter=this.p5.map(e,0,this.maxDistance,this.settings.CircleDiameterRange[0],this.settings.CircleDiameterRange[1])}else this.settings.VaryDiameterRandomly&&(s.diameter=this.p5.random(this.settings.CircleDiameterRange[0],this.settings.CircleDiameterRange[1]));this.createWalker(s)}}createDefaultClusters(s=this.settings.InitialClusterType){let e=[];switch(s){case"Point":e.push({x:window.innerWidth/2,y:window.innerHeight/2,diameter:this.settings.CircleDiameter});break;case"Ring":let r=100,l=20;for(let s=0;s<l;s++)e.push({x:window.innerWidth/2+r*Math.cos(360/l*s*Math.PI/180),y:window.innerHeight/2+r*Math.sin(360/l*s*Math.PI/180),diameter:this.settings.CircleDiameter});break;case"Random":for(let s=0;s<100;s++)e.push({x:this.p5.random(this.edges.left,this.edges.right),y:this.p5.random(this.edges.top,this.edges.bottom),diameter:this.settings.CircleDiameter});break;case"Wall":switch(this.settings.BiasTowards){case"Top":e=this.createHorizontalClusterWall(this.edges.top);break;case"Bottom":e=this.createHorizontalClusterWall(this.edges.bottom);break;case"Left":e=this.createVerticalClusterWall(this.edges.left);break;case"Right":e=this.createVerticalClusterWall(this.edges.right);break;case"Edges":e=(e=(e=(e=e.concat(this.createHorizontalClusterWall(this.edges.top))).concat(this.createHorizontalClusterWall(this.edges.bottom))).concat(this.createVerticalClusterWall(this.edges.left))).concat(this.createVerticalClusterWall(this.edges.right));break;case"Equator":e=e.concat(this.createHorizontalClusterWall(window.innerHeight/2));break;case"Meridian":e=e.concat(this.createVerticalClusterWall(window.innerWidth/2))}}this.createClusterFromParams(e)}createHorizontalClusterWall(s){let e=[],r=this.useFrame?this.edges.right-this.edges.left:window.innerWidth;for(let l=0;l<=r/this.settings.CircleDiameter;l++)e.push({x:this.edges.left+l*this.settings.CircleDiameter,y:s,diameter:this.settings.CircleDiameter});return e}createVerticalClusterWall(s){let e=[],r=this.useFrame?this.edges.bottom-this.edges.top:window.innerHeight;for(let l=0;l<=r/this.settings.CircleDiameter;l++)e.push({x:s,y:this.edges.top+l*this.settings.CircleDiameter,diameter:this.settings.CircleDiameter});return e}createClusterFromParams(s){if(s.length>0)for(let e of s)e.stuck=!0,this.createParticle(e)}createShapesFromPaths(s){if(s.hasOwnProperty("points")||0!=s.length)for(let e of s)if(e.solid){let s=this.system.createPolygon(e.x,e.y,e.points);s.solid=e.solid,s.closed=e.closed,this.shapes.push(s)}else for(let s=1;s<e.points.length;s++){let r=this.system.createPolygon(e.x,e.y,[[e.points[s-1][0],e.points[s-1][1]],[e.points[s][0],e.points[s][1]]]);r.solid=!1,r.closed=!1,this.shapes.push(r)}else console.error("Unable to create shapes. Paths must have an array of points [[x,y],...]")}removeAll(){for(let s of this.bodies)this.system.remove(s);for(let s of this.shapes)this.system.remove(s);this.bodies=[],this.shapes=[],this.lines=[],this.numWalkers=0}togglePause(){this.paused=!this.paused}toggleShowWalkers(){this.showWalkers=!this.showWalkers}toggleShowClusters(){this.showClusters=!this.showClusters}toggleShowShapes(){this.showShapes=!this.showShapes}toggleUseFrame(){this.useFrame=!this.useFrame,this.resetEdges()}toggleLineRenderingMode(){"Lines"!=this.renderMode?this.settings.CaptureLines?this.renderMode="Lines":console.error("Line rendering mode only allowed when CaptureLines is set."):this.renderMode="Shapes"}pause(){this.paused=!0}unpause(){this.paused=!1}getColorStringFromObject(s){return"hsla("+s.h+", "+s.s+"%, "+s.b+"%, "+s.a+")"}export(){let s=document.createElement("svg");switch(s.setAttribute("xmlns","http://www.w3.org/2000/svg"),s.setAttribute("xmlns:xlink","http://www.w3.org/1999/xlink"),s.setAttribute("width",window.innerWidth),s.setAttribute("height",window.innerHeight),s.setAttribute("viewBox","0 0 "+window.innerWidth+" "+window.innerHeight),this.renderMode){case"Shapes":default:for(let e of this.bodies)(e.stuck||this.showWalkers)&&(e._circle?s.appendChild(this.createCircleElFromBody(e)):s.appendChild(this.createPathElFromPoints(this.getPointsFromCoords(e._coords))));break;case"Lines":if(this.lines.length>0)for(let e of this.lines){let r=[];r.push({x:e.p1.x,y:e.p1.y}),r.push({x:e.p2.x,y:e.p2.y}),s.appendChild(this.createPathElFromPoints(r))}}if(this.shapes.length>0)for(let e of this.shapes)s.appendChild(this.createPathElFromPoints(this.getPointsFromCoords(e._coords)));let e=document.implementation.createDocumentType("svg","-//W3C//DTD SVG 1.1//EN","http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"),r=document.implementation.createDocument("http://www.w3.org/2000/svg","svg",e);r.replaceChild(s,r.documentElement);let l=(new XMLSerializer).serializeToString(r),o=new Blob([l.replace(/></g,">\n\r<")]);Object(Y.saveAs)(o,"dla-"+Date.now()+".svg")}getPointsFromCoords(s){let e=[];for(let r=0;r<s.length-1;r+=2)e.push({x:s[r],y:s[r+1]});return e}createPathElFromPoints(s){let e="";for(let[r,l]of s.entries())e+=l.x+","+l.y,r<s.length-1&&(e+=" ");let r=Q({type:"polyline",points:e}),l=document.createElement("path");return l.setAttribute("d",r),l.setAttribute("style","fill: none; stroke: black; stroke-width: 1"),l}createCircleElFromBody(s){let e=document.createElement("circle");return e.setAttribute("cx",s.x),e.setAttribute("cy",s.y),e.setAttribute("r",s.radius),e}}},function(s,e){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(s){"object"==typeof window&&(r=window)}s.exports=r},function(s,e,r){"use strict";var l=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(s,e){s.__proto__=e}||function(s,e){for(var r in e)e.hasOwnProperty(r)&&(s[r]=e[r])};function o(s,e){function r(){this.constructor=s}l(s,e),s.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}function c(s,e){var r=s[0],l=s[1];return[r*Math.cos(e)-l*Math.sin(e),r*Math.sin(e)+l*Math.cos(e)]}function u(){for(var s=[],e=0;e<arguments.length;e++)s[e]=arguments[e];for(var r=0;r<s.length;r++)if("number"!=typeof s[r])throw new Error("assertNumbers arguments["+r+"] is not a number. "+typeof s[r]+" == typeof "+s[r]);return!0}var n=Math.PI;function y(s,e,r){s.lArcFlag=0===s.lArcFlag?0:1,s.sweepFlag=0===s.sweepFlag?0:1;var l=s.rX,o=s.rY,u=s.x,y=s.y;l=Math.abs(s.rX),o=Math.abs(s.rY);var f=c([(e-u)/2,(r-y)/2],-s.xRot/180*n),d=f[0],g=f[1],w=Math.pow(d,2)/Math.pow(l,2)+Math.pow(g,2)/Math.pow(o,2);1<w&&(l*=Math.sqrt(w),o*=Math.sqrt(w)),s.rX=l,s.rY=o;var p=Math.pow(l,2)*Math.pow(g,2)+Math.pow(o,2)*Math.pow(d,2),T=(s.lArcFlag!==s.sweepFlag?1:-1)*Math.sqrt(Math.max(0,(Math.pow(l,2)*Math.pow(o,2)-p)/p)),O=l*g/o*T,v=-o*d/l*T,b=c([O,v],s.xRot/180*n);s.cX=b[0]+(e+u)/2,s.cY=b[1]+(r+y)/2,s.phi1=Math.atan2((g-v)/o,(d-O)/l),s.phi2=Math.atan2((-g-v)/o,(-d-O)/l),0===s.sweepFlag&&s.phi2>s.phi1&&(s.phi2-=2*n),1===s.sweepFlag&&s.phi2<s.phi1&&(s.phi2+=2*n),s.phi1*=180/n,s.phi2*=180/n}function f(s,e,r){u(s,e,r);var l=s*s+e*e-r*r;if(0>l)return[];if(0===l)return[[s*r/(s*s+e*e),e*r/(s*s+e*e)]];var o=Math.sqrt(l);return[[(s*r+e*o)/(s*s+e*e),(e*r-s*o)/(s*s+e*e)],[(s*r-e*o)/(s*s+e*e),(e*r+s*o)/(s*s+e*e)]]}var d,g=Math.PI/180;function w(s,e,r){return(1-r)*s+r*e}function p(s,e,r,l){return s+Math.cos(l/180*n)*e+Math.sin(l/180*n)*r}function T(s,e,r,l){var o=e-s,c=r-e,u=3*o+3*(l-r)-6*c,n=6*(c-o),y=3*o;return Math.abs(u)<1e-6?[-y/n]:function(s,e,r){void 0===r&&(r=1e-6);var l=s*s/4-e;if(l<-r)return[];if(l<=r)return[-s/2];var o=Math.sqrt(l);return[-s/2-o,-s/2+o]}(n/u,y/u,1e-6)}function O(s,e,r,l,o){var c=1-o;return s*(c*c*c)+e*(3*c*c*o)+r*(3*c*o*o)+l*(o*o*o)}!function(s){function e(){return o(function(s,e,r){return s.relative&&(void 0!==s.x1&&(s.x1+=e),void 0!==s.y1&&(s.y1+=r),void 0!==s.x2&&(s.x2+=e),void 0!==s.y2&&(s.y2+=r),void 0!==s.x&&(s.x+=e),void 0!==s.y&&(s.y+=r),s.relative=!1),s})}function r(){var s=NaN,e=NaN,r=NaN,l=NaN;return o(function(o,c,u){return o.type&x.SMOOTH_CURVE_TO&&(o.type=x.CURVE_TO,s=isNaN(s)?c:s,e=isNaN(e)?u:e,o.x1=o.relative?c-s:2*c-s,o.y1=o.relative?u-e:2*u-e),o.type&x.CURVE_TO?(s=o.relative?c+o.x2:o.x2,e=o.relative?u+o.y2:o.y2):(s=NaN,e=NaN),o.type&x.SMOOTH_QUAD_TO&&(o.type=x.QUAD_TO,r=isNaN(r)?c:r,l=isNaN(l)?u:l,o.x1=o.relative?c-r:2*c-r,o.y1=o.relative?u-l:2*u-l),o.type&x.QUAD_TO?(r=o.relative?c+o.x1:o.x1,l=o.relative?u+o.y1:o.y1):(r=NaN,l=NaN),o})}function l(){var s=NaN,e=NaN;return o(function(r,l,o){if(r.type&x.SMOOTH_QUAD_TO&&(r.type=x.QUAD_TO,s=isNaN(s)?l:s,e=isNaN(e)?o:e,r.x1=r.relative?l-s:2*l-s,r.y1=r.relative?o-e:2*o-e),r.type&x.QUAD_TO){s=r.relative?l+r.x1:r.x1,e=r.relative?o+r.y1:r.y1;var c=r.x1,u=r.y1;r.type=x.CURVE_TO,r.x1=((r.relative?0:l)+2*c)/3,r.y1=((r.relative?0:o)+2*u)/3,r.x2=(r.x+2*c)/3,r.y2=(r.y+2*u)/3}else s=NaN,e=NaN;return r})}function o(s){var e=0,r=0,l=NaN,o=NaN;return function(c){if(isNaN(l)&&!(c.type&x.MOVE_TO))throw new Error("path must start with moveto");var u=s(c,e,r,l,o);return c.type&x.CLOSE_PATH&&(e=l,r=o),void 0!==c.x&&(e=c.relative?e+c.x:c.x),void 0!==c.y&&(r=c.relative?r+c.y:c.y),c.type&x.MOVE_TO&&(l=e,o=r),u}}function n(s,e,r,l,c,n){return u(s,e,r,l,c,n),o(function(o,u,y,f){var d=o.x1,g=o.x2,w=o.relative&&!isNaN(f),p=void 0!==o.x?o.x:w?0:u,T=void 0!==o.y?o.y:w?0:y;function O(s){return s*s}o.type&x.HORIZ_LINE_TO&&0!==e&&(o.type=x.LINE_TO,o.y=o.relative?0:y),o.type&x.VERT_LINE_TO&&0!==r&&(o.type=x.LINE_TO,o.x=o.relative?0:u),void 0!==o.x&&(o.x=o.x*s+T*r+(w?0:c)),void 0!==o.y&&(o.y=p*e+o.y*l+(w?0:n)),void 0!==o.x1&&(o.x1=o.x1*s+o.y1*r+(w?0:c)),void 0!==o.y1&&(o.y1=d*e+o.y1*l+(w?0:n)),void 0!==o.x2&&(o.x2=o.x2*s+o.y2*r+(w?0:c)),void 0!==o.y2&&(o.y2=g*e+o.y2*l+(w?0:n));var v=s*l-e*r;if(void 0!==o.xRot&&(1!==s||0!==e||0!==r||1!==l))if(0===v)delete o.rX,delete o.rY,delete o.xRot,delete o.lArcFlag,delete o.sweepFlag,o.type=x.LINE_TO;else{var b=o.xRot*Math.PI/180,m=Math.sin(b),k=Math.cos(b),C=1/O(o.rX),E=1/O(o.rY),M=O(k)*C+O(m)*E,R=2*m*k*(C-E),N=O(m)*C+O(k)*E,A=M*l*l-R*e*l+N*e*e,F=R*(s*l+e*r)-2*(M*r*l+N*s*e),H=M*r*r-R*s*r+N*s*s,L=(Math.atan2(F,A-H)+Math.PI)%Math.PI/2,I=Math.sin(L),U=Math.cos(L);o.rX=Math.abs(v)/Math.sqrt(A*O(U)+F*I*U+H*O(I)),o.rY=Math.abs(v)/Math.sqrt(A*O(I)-F*I*U+H*O(U)),o.xRot=180*L/Math.PI}return void 0!==o.sweepFlag&&0>v&&(o.sweepFlag=+!o.sweepFlag),o})}s.ROUND=function(s){function e(e){return Math.round(e*s)/s}return void 0===s&&(s=1e13),u(s),function(s){return void 0!==s.x1&&(s.x1=e(s.x1)),void 0!==s.y1&&(s.y1=e(s.y1)),void 0!==s.x2&&(s.x2=e(s.x2)),void 0!==s.y2&&(s.y2=e(s.y2)),void 0!==s.x&&(s.x=e(s.x)),void 0!==s.y&&(s.y=e(s.y)),s}},s.TO_ABS=e,s.TO_REL=function(){return o(function(s,e,r){return s.relative||(void 0!==s.x1&&(s.x1-=e),void 0!==s.y1&&(s.y1-=r),void 0!==s.x2&&(s.x2-=e),void 0!==s.y2&&(s.y2-=r),void 0!==s.x&&(s.x-=e),void 0!==s.y&&(s.y-=r),s.relative=!0),s})},s.NORMALIZE_HVZ=function(s,e,r){return void 0===s&&(s=!0),void 0===e&&(e=!0),void 0===r&&(r=!0),o(function(l,o,c,u,n){if(isNaN(u)&&!(l.type&x.MOVE_TO))throw new Error("path must start with moveto");return e&&l.type&x.HORIZ_LINE_TO&&(l.type=x.LINE_TO,l.y=l.relative?0:c),r&&l.type&x.VERT_LINE_TO&&(l.type=x.LINE_TO,l.x=l.relative?0:o),s&&l.type&x.CLOSE_PATH&&(l.type=x.LINE_TO,l.x=l.relative?u-o:u,l.y=l.relative?n-c:n),l.type&x.ARC&&(0===l.rX||0===l.rY)&&(l.type=x.LINE_TO,delete l.rX,delete l.rY,delete l.xRot,delete l.lArcFlag,delete l.sweepFlag),l})},s.NORMALIZE_ST=r,s.QT_TO_C=l,s.INFO=o,s.SANITIZE=function(s){void 0===s&&(s=0),u(s);var e=NaN,r=NaN,l=NaN,c=NaN;return o(function(o,u,n,y,f){var d=Math.abs,g=!1,w=0,p=0;if(o.type&x.SMOOTH_CURVE_TO&&(w=isNaN(e)?0:u-e,p=isNaN(r)?0:n-r),o.type&(x.CURVE_TO|x.SMOOTH_CURVE_TO)?(e=o.relative?u+o.x2:o.x2,r=o.relative?n+o.y2:o.y2):(e=NaN,r=NaN),o.type&x.SMOOTH_QUAD_TO?(l=isNaN(l)?u:2*u-l,c=isNaN(c)?n:2*n-c):o.type&x.QUAD_TO?(l=o.relative?u+o.x1:o.x1,c=o.relative?n+o.y1:o.y2):(l=NaN,c=NaN),o.type&x.LINE_COMMANDS||o.type&x.ARC&&(0===o.rX||0===o.rY||!o.lArcFlag)||o.type&x.CURVE_TO||o.type&x.SMOOTH_CURVE_TO||o.type&x.QUAD_TO||o.type&x.SMOOTH_QUAD_TO){var T=void 0===o.x?0:o.relative?o.x:o.x-u,O=void 0===o.y?0:o.relative?o.y:o.y-n;w=isNaN(l)?void 0===o.x1?w:o.relative?o.x:o.x1-u:l-u,p=isNaN(c)?void 0===o.y1?p:o.relative?o.y:o.y1-n:c-n;var v=void 0===o.x2?0:o.relative?o.x:o.x2-u,b=void 0===o.y2?0:o.relative?o.y:o.y2-n;d(T)<=s&&d(O)<=s&&d(w)<=s&&d(p)<=s&&d(v)<=s&&d(b)<=s&&(g=!0)}return o.type&x.CLOSE_PATH&&d(u-y)<=s&&d(n-f)<=s&&(g=!0),g?[]:o})},s.MATRIX=n,s.ROTATE=function(s,e,r){void 0===e&&(e=0),void 0===r&&(r=0),u(s,e,r);var l=Math.sin(s),o=Math.cos(s);return n(o,l,-l,o,e-e*o+r*l,r-e*l-r*o)},s.TRANSLATE=function(s,e){return void 0===e&&(e=0),u(s,e),n(1,0,0,1,s,e)},s.SCALE=function(s,e){return void 0===e&&(e=s),u(s,e),n(s,0,0,e,0,0)},s.SKEW_X=function(s){return u(s),n(1,0,Math.atan(s),1,0,0)},s.SKEW_Y=function(s){return u(s),n(1,Math.atan(s),0,1,0,0)},s.X_AXIS_SYMMETRY=function(s){return void 0===s&&(s=0),u(s),n(-1,0,0,1,s,0)},s.Y_AXIS_SYMMETRY=function(s){return void 0===s&&(s=0),u(s),n(1,0,0,-1,0,s)},s.A_TO_C=function(){return o(function(s,e,r){return x.ARC===s.type?function(s,e,r){var l,o,u,n;s.cX||y(s,e,r);for(var f=Math.min(s.phi1,s.phi2),d=Math.max(s.phi1,s.phi2)-f,p=Math.ceil(d/90),T=new Array(p),O=e,v=r,b=0;b<p;b++){var m=w(s.phi1,s.phi2,b/p),k=w(s.phi1,s.phi2,(b+1)/p),C=k-m,E=4/3*Math.tan(C*g/4),M=[Math.cos(m*g)-E*Math.sin(m*g),Math.sin(m*g)+E*Math.cos(m*g)],R=M[0],N=M[1],A=[Math.cos(k*g),Math.sin(k*g)],F=A[0],H=A[1],L=[F+E*Math.sin(k*g),H-E*Math.cos(k*g)],I=L[0],U=L[1];T[b]={relative:s.relative,type:x.CURVE_TO};var B=function(e,r){var l=c([e*s.rX,r*s.rY],s.xRot),o=l[0],u=l[1];return[s.cX+o,s.cY+u]};l=B(R,N),T[b].x1=l[0],T[b].y1=l[1],o=B(I,U),T[b].x2=o[0],T[b].y2=o[1],u=B(F,H),T[b].x=u[0],T[b].y=u[1],s.relative&&(T[b].x1-=O,T[b].y1-=v,T[b].x2-=O,T[b].y2-=v,T[b].x-=O,T[b].y-=v),O=(n=[T[b].x,T[b].y])[0],v=n[1]}return T}(s,s.relative?0:e,s.relative?0:r):s})},s.ANNOTATE_ARCS=function(){return o(function(s,e,r){return s.relative&&(e=0,r=0),x.ARC===s.type&&y(s,e,r),s})},s.CLONE=function(){return function(s){var e={};for(var r in s)e[r]=s[r];return e}},s.CALCULATE_BOUNDS=function(){var s=e(),c=l(),u=r(),n=o(function(e,r,l){var o=u(c(s(function(s){var e={};for(var r in s)e[r]=s[r];return e}(e))));function d(s){s>n.maxX&&(n.maxX=s),s<n.minX&&(n.minX=s)}function g(s){s>n.maxY&&(n.maxY=s),s<n.minY&&(n.minY=s)}if(o.type&x.DRAWING_COMMANDS&&(d(r),g(l)),o.type&x.HORIZ_LINE_TO&&d(o.x),o.type&x.VERT_LINE_TO&&g(o.y),o.type&x.LINE_TO&&(d(o.x),g(o.y)),o.type&x.CURVE_TO){d(o.x),g(o.y);for(var w=0,v=T(r,o.x1,o.x2,o.x);w<v.length;w++)0<(z=v[w])&&1>z&&d(O(r,o.x1,o.x2,o.x,z));for(var b=0,m=T(l,o.y1,o.y2,o.y);b<m.length;b++)0<(z=m[b])&&1>z&&g(O(l,o.y1,o.y2,o.y,z))}if(o.type&x.ARC){d(o.x),g(o.y),y(o,r,l);for(var k=o.xRot/180*Math.PI,C=Math.cos(k)*o.rX,E=Math.sin(k)*o.rX,M=-Math.sin(k)*o.rY,R=Math.cos(k)*o.rY,N=o.phi1<o.phi2?[o.phi1,o.phi2]:-180>o.phi2?[o.phi2+360,o.phi1+360]:[o.phi2,o.phi1],A=N[0],F=N[1],H=function(s){var e=s[0],r=s[1],l=180*Math.atan2(r,e)/Math.PI;return l<A?l+360:l},L=0,I=f(M,-C,0).map(H);L<I.length;L++)(z=I[L])>A&&z<F&&d(p(o.cX,C,M,z));for(var U=0,B=f(R,-E,0).map(H);U<B.length;U++){var z;(z=B[U])>A&&z<F&&g(p(o.cY,E,R,z))}}return e});return n.minX=1/0,n.maxX=-1/0,n.minY=1/0,n.maxY=-1/0,n}}(d||(d={}));var v,b,m=function(){function s(){}return s.prototype.round=function(s){return this.transform(d.ROUND(s))},s.prototype.toAbs=function(){return this.transform(d.TO_ABS())},s.prototype.toRel=function(){return this.transform(d.TO_REL())},s.prototype.normalizeHVZ=function(s,e,r){return this.transform(d.NORMALIZE_HVZ(s,e,r))},s.prototype.normalizeST=function(){return this.transform(d.NORMALIZE_ST())},s.prototype.qtToC=function(){return this.transform(d.QT_TO_C())},s.prototype.aToC=function(){return this.transform(d.A_TO_C())},s.prototype.sanitize=function(s){return this.transform(d.SANITIZE(s))},s.prototype.translate=function(s,e){return this.transform(d.TRANSLATE(s,e))},s.prototype.scale=function(s,e){return this.transform(d.SCALE(s,e))},s.prototype.rotate=function(s,e,r){return this.transform(d.ROTATE(s,e,r))},s.prototype.matrix=function(s,e,r,l,o,c){return this.transform(d.MATRIX(s,e,r,l,o,c))},s.prototype.skewX=function(s){return this.transform(d.SKEW_X(s))},s.prototype.skewY=function(s){return this.transform(d.SKEW_Y(s))},s.prototype.xSymmetry=function(s){return this.transform(d.X_AXIS_SYMMETRY(s))},s.prototype.ySymmetry=function(s){return this.transform(d.Y_AXIS_SYMMETRY(s))},s.prototype.annotateArcs=function(){return this.transform(d.ANNOTATE_ARCS())},s}(),k=function(s){return" "===s||"\t"===s||"\r"===s||"\n"===s},C=function(s){return"0".charCodeAt(0)<=s.charCodeAt(0)&&s.charCodeAt(0)<="9".charCodeAt(0)},E=function(s){function e(){var e=s.call(this)||this;return e.curNumber="",e.curCommandType=-1,e.curCommandRelative=!1,e.canParseCommandOrComma=!0,e.curNumberHasExp=!1,e.curNumberHasExpDigits=!1,e.curNumberHasDecimal=!1,e.curArgs=[],e}return o(e,s),e.prototype.finish=function(s){if(void 0===s&&(s=[]),this.parse(" ",s),0!==this.curArgs.length||!this.canParseCommandOrComma)throw new SyntaxError("Unterminated command at the path end.");return s},e.prototype.parse=function(s,e){var r=this;void 0===e&&(e=[]);for(var l=function(s){e.push(s),r.curArgs.length=0,r.canParseCommandOrComma=!0},o=0;o<s.length;o++){var c=s[o];if(C(c))this.curNumber+=c,this.curNumberHasExpDigits=this.curNumberHasExp;else if("e"!==c&&"E"!==c)if("-"!==c&&"+"!==c||!this.curNumberHasExp||this.curNumberHasExpDigits)if("."!==c||this.curNumberHasExp||this.curNumberHasDecimal){if(this.curNumber&&-1!==this.curCommandType){var u=Number(this.curNumber);if(isNaN(u))throw new SyntaxError("Invalid number ending at "+o);if(this.curCommandType===x.ARC)if(0===this.curArgs.length||1===this.curArgs.length){if(0>u)throw new SyntaxError('Expected positive number, got "'+u+'" at index "'+o+'"')}else if((3===this.curArgs.length||4===this.curArgs.length)&&"0"!==this.curNumber&&"1"!==this.curNumber)throw new SyntaxError('Expected a flag, got "'+this.curNumber+'" at index "'+o+'"');this.curArgs.push(u),this.curArgs.length===M[this.curCommandType]&&(x.HORIZ_LINE_TO===this.curCommandType?l({type:x.HORIZ_LINE_TO,relative:this.curCommandRelative,x:u}):x.VERT_LINE_TO===this.curCommandType?l({type:x.VERT_LINE_TO,relative:this.curCommandRelative,y:u}):this.curCommandType===x.MOVE_TO||this.curCommandType===x.LINE_TO||this.curCommandType===x.SMOOTH_QUAD_TO?(l({type:this.curCommandType,relative:this.curCommandRelative,x:this.curArgs[0],y:this.curArgs[1]}),x.MOVE_TO===this.curCommandType&&(this.curCommandType=x.LINE_TO)):this.curCommandType===x.CURVE_TO?l({type:x.CURVE_TO,relative:this.curCommandRelative,x1:this.curArgs[0],y1:this.curArgs[1],x2:this.curArgs[2],y2:this.curArgs[3],x:this.curArgs[4],y:this.curArgs[5]}):this.curCommandType===x.SMOOTH_CURVE_TO?l({type:x.SMOOTH_CURVE_TO,relative:this.curCommandRelative,x2:this.curArgs[0],y2:this.curArgs[1],x:this.curArgs[2],y:this.curArgs[3]}):this.curCommandType===x.QUAD_TO?l({type:x.QUAD_TO,relative:this.curCommandRelative,x1:this.curArgs[0],y1:this.curArgs[1],x:this.curArgs[2],y:this.curArgs[3]}):this.curCommandType===x.ARC&&l({type:x.ARC,relative:this.curCommandRelative,rX:this.curArgs[0],rY:this.curArgs[1],xRot:this.curArgs[2],lArcFlag:this.curArgs[3],sweepFlag:this.curArgs[4],x:this.curArgs[5],y:this.curArgs[6]})),this.curNumber="",this.curNumberHasExpDigits=!1,this.curNumberHasExp=!1,this.curNumberHasDecimal=!1,this.canParseCommandOrComma=!0}if(!k(c))if(","===c&&this.canParseCommandOrComma)this.canParseCommandOrComma=!1;else if("+"!==c&&"-"!==c&&"."!==c){if(0!==this.curArgs.length)throw new SyntaxError("Unterminated command at index "+o+".");if(!this.canParseCommandOrComma)throw new SyntaxError('Unexpected character "'+c+'" at index '+o+". Command cannot follow comma");if(this.canParseCommandOrComma=!1,"z"!==c&&"Z"!==c)if("h"===c||"H"===c)this.curCommandType=x.HORIZ_LINE_TO,this.curCommandRelative="h"===c;else if("v"===c||"V"===c)this.curCommandType=x.VERT_LINE_TO,this.curCommandRelative="v"===c;else if("m"===c||"M"===c)this.curCommandType=x.MOVE_TO,this.curCommandRelative="m"===c;else if("l"===c||"L"===c)this.curCommandType=x.LINE_TO,this.curCommandRelative="l"===c;else if("c"===c||"C"===c)this.curCommandType=x.CURVE_TO,this.curCommandRelative="c"===c;else if("s"===c||"S"===c)this.curCommandType=x.SMOOTH_CURVE_TO,this.curCommandRelative="s"===c;else if("q"===c||"Q"===c)this.curCommandType=x.QUAD_TO,this.curCommandRelative="q"===c;else if("t"===c||"T"===c)this.curCommandType=x.SMOOTH_QUAD_TO,this.curCommandRelative="t"===c;else{if("a"!==c&&"A"!==c)throw new SyntaxError('Unexpected character "'+c+'" at index '+o+".");this.curCommandType=x.ARC,this.curCommandRelative="a"===c}else e.push({type:x.CLOSE_PATH}),this.canParseCommandOrComma=!0,this.curCommandType=-1}else this.curNumber=c,this.curNumberHasDecimal="."===c}else this.curNumber+=c,this.curNumberHasDecimal=!0;else this.curNumber+=c;else this.curNumber+=c,this.curNumberHasExp=!0}return e},e.prototype.transform=function(s){return Object.create(this,{parse:{value:function(e,r){void 0===r&&(r=[]);for(var l=0,o=Object.getPrototypeOf(this).parse.call(this,e);l<o.length;l++){var c=o[l],u=s(c);Array.isArray(u)?r.push.apply(r,u):r.push(u)}return r}}})},e}(m),x=function(s){function e(r){var l=s.call(this)||this;return l.commands="string"==typeof r?e.parse(r):r,l}return o(e,s),e.prototype.encode=function(){return e.encode(this.commands)},e.prototype.getBounds=function(){var s=d.CALCULATE_BOUNDS();return this.transform(s),s},e.prototype.transform=function(s){for(var e=[],r=0,l=this.commands;r<l.length;r++){var o=s(l[r]);Array.isArray(o)?e.push.apply(e,o):e.push(o)}return this.commands=e,this},e.encode=function(s){return N(s)},e.parse=function(s){var e=new E,r=[];return e.parse(s,r),e.finish(r),r},e.CLOSE_PATH=1,e.MOVE_TO=2,e.HORIZ_LINE_TO=4,e.VERT_LINE_TO=8,e.LINE_TO=16,e.CURVE_TO=32,e.SMOOTH_CURVE_TO=64,e.QUAD_TO=128,e.SMOOTH_QUAD_TO=256,e.ARC=512,e.LINE_COMMANDS=e.LINE_TO|e.HORIZ_LINE_TO|e.VERT_LINE_TO,e.DRAWING_COMMANDS=e.HORIZ_LINE_TO|e.VERT_LINE_TO|e.LINE_TO|e.CURVE_TO|e.SMOOTH_CURVE_TO|e.QUAD_TO|e.SMOOTH_QUAD_TO|e.ARC,e}(m),M=((v={})[x.MOVE_TO]=2,v[x.LINE_TO]=2,v[x.HORIZ_LINE_TO]=1,v[x.VERT_LINE_TO]=1,v[x.CLOSE_PATH]=0,v[x.QUAD_TO]=4,v[x.SMOOTH_QUAD_TO]=2,v[x.CURVE_TO]=6,v[x.SMOOTH_CURVE_TO]=4,v[x.ARC]=7,v),R=" ";function N(s){var e="";Array.isArray(s)||(s=[s]);for(var r=0;r<s.length;r++){var l=s[r];if(l.type===x.CLOSE_PATH)e+="z";else if(l.type===x.HORIZ_LINE_TO)e+=(l.relative?"h":"H")+l.x;else if(l.type===x.VERT_LINE_TO)e+=(l.relative?"v":"V")+l.y;else if(l.type===x.MOVE_TO)e+=(l.relative?"m":"M")+l.x+R+l.y;else if(l.type===x.LINE_TO)e+=(l.relative?"l":"L")+l.x+R+l.y;else if(l.type===x.CURVE_TO)e+=(l.relative?"c":"C")+l.x1+R+l.y1+R+l.x2+R+l.y2+R+l.x+R+l.y;else if(l.type===x.SMOOTH_CURVE_TO)e+=(l.relative?"s":"S")+l.x2+R+l.y2+R+l.x+R+l.y;else if(l.type===x.QUAD_TO)e+=(l.relative?"q":"Q")+l.x1+R+l.y1+R+l.x+R+l.y;else if(l.type===x.SMOOTH_QUAD_TO)e+=(l.relative?"t":"T")+l.x+R+l.y;else{if(l.type!==x.ARC)throw new Error('Unexpected command type "'+l.type+'" at index '+r+".");e+=(l.relative?"a":"A")+l.rX+R+l.rY+R+l.xRot+R+ +l.lArcFlag+R+ +l.sweepFlag+R+l.x+R+l.y}}return e}var A=function(s){function e(r){var l=s.call(this)||this;return l.commands="string"==typeof r?e.parse(r):r,l}return o(e,s),e.prototype.encode=function(){return e.encode(this.commands)},e.prototype.getBounds=function(){var s=d.CALCULATE_BOUNDS();return this.transform(s),s},e.prototype.transform=function(s){for(var e=[],r=0,l=this.commands;r<l.length;r++){var o=s(l[r]);Array.isArray(o)?e.push.apply(e,o):e.push(o)}return this.commands=e,this},e.encode=function(s){return N(s)},e.parse=function(s){var e=new E,r=[];return e.parse(s,r),e.finish(r),r},e.CLOSE_PATH=1,e.MOVE_TO=2,e.HORIZ_LINE_TO=4,e.VERT_LINE_TO=8,e.LINE_TO=16,e.CURVE_TO=32,e.SMOOTH_CURVE_TO=64,e.QUAD_TO=128,e.SMOOTH_QUAD_TO=256,e.ARC=512,e.LINE_COMMANDS=e.LINE_TO|e.HORIZ_LINE_TO|e.VERT_LINE_TO,e.DRAWING_COMMANDS=e.HORIZ_LINE_TO|e.VERT_LINE_TO|e.LINE_TO|e.CURVE_TO|e.SMOOTH_CURVE_TO|e.QUAD_TO|e.SMOOTH_QUAD_TO|e.ARC,e}(m);(b={})[A.MOVE_TO]=2,b[A.LINE_TO]=2,b[A.HORIZ_LINE_TO]=1,b[A.VERT_LINE_TO]=1,b[A.CLOSE_PATH]=0,b[A.QUAD_TO]=4,b[A.SMOOTH_QUAD_TO]=2,b[A.CURVE_TO]=6,b[A.SMOOTH_CURVE_TO]=4,b[A.ARC]=7;r.d(e,"a",function(){return F});class F{constructor(){}static loadFromFileContents(s){let e=(new DOMParser).parseFromString(s,"image/svg+xml");return this.load(e)}static load(s){let e=s.querySelectorAll("path"),r={},l=[];r.points=[];for(let s of e){let e=new A(s.getAttribute("d")),o={x:0,y:0};for(let[s,c]of e.commands.entries()){switch(c.type){case A.MOVE_TO:case A.LINE_TO:r.points.push([c.x,c.y]);break;case A.HORIZ_LINE_TO:r.points.push([c.x,o.y]);break;case A.VERT_LINE_TO:r.points.push([o.x,c.y]);break;case A.CLOSE_PATH:r.closed=!0,l.push(r),(r={}).points=[]}if(s==e.commands.length-1&&c.type!=A.CLOSE_PATH){let s=r.points[0],e=r.points[r.points.length-1];Math.hypot(e.x-s.x,e.y-s.y)<.1?r.closed=!0:r.closed=!1,l.push(r),(r={}).points=[]}c.hasOwnProperty("x")&&(o.x=c.x),c.hasOwnProperty("y")&&(o.y=c.y)}}for(let s of l){s.x=s.points[0][0],s.y=s.points[0][1],s.points.push([s.x,s.y]);for(let e of s.points)e[0]-=s.x,e[1]-=s.y}return l}}},,,function(s,e){s.exports='<svg xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" viewBox="0 0 900 900" version="1.1" id="svg8" sodipodi:docname="dla.svg" inkscape:version="0.92.3 (2405546, 2018-03-11)"><path style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 360.0972,430.72214 356.96812,456.71 347.58087,479.86521 333.41765,498.96906 315.96066,513.06641 300.90813,520.44447 284.47221,525.18747 265.76359,527.75662 243.89295,528.61302 H 209.30835 174.72376 V 430.52451 332.43599 H 210.29649 245.86922 L 268.20099,333.45707 287.23898,336.52027 303.24671,341.32917 316.48767,347.85084 334.60341,362.40932 348.37137,381.31556 357.16575,404.14142 360.0972,430.72214" id="path820"></path><path style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 307.79212,430.32687 306.01348,412.37583 300.67756,397.25741 291.61969,384.93871 278.41167,375.65026 270.53956,372.4553 262.46982,370.512 252.35794,369.42506 238.09592,369.06274 H 231.706 225.31609 V 430.45864 491.8545 H 231.706 238.09592 L 253.74133,491.45923 264.57783,490.27351 272.91108,487.90199 281.04669,484.21298 293.03602,474.99044 301.33632,463.13284 306.17817,448.27792 307.79212,430.32687" id="path819"></path><path inkscape:connector-curvature="0" id="path821" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 517.15385,528.61302 H 375.65347 V 332.43599 H 426.24576 V 490.66878 H 517.15385 V 528.61302" sodipodi:nodetypes="ccccccc"></path><path style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 731.69898,528.61302 H 679.39389 L 665.82358,488.95599 H 593.09708 L 579.52676,528.61302 H 528.53917 L 601.00213,332.43599 H 659.23601 L 731.69898,528.61302" id="path824"></path><path style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 653.57075,452.988 629.46033,382.63306 605.34994,452.988 H 653.57075" id="path823"></path></svg>'},function(s,e){s.exports='<svg xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" id="svg832" version="1.1" viewBox="0 0 900 900" sodipodi:docname="polygons.svg" inkscape:version="0.92.3 (2405546, 2018-03-11)"><path id="path1377" style="opacity:1;vector-effect:none;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" d="M 637.95718,464.22103 584.33571,382.14098 530.71423,300.06092 486.44216,387.53824 465.30384,429.30364 437.48882,430.45616 403.17529,384.77031 427.64471,365.18499 414.35188,278.03524 332.23363,245.97365 263.40556,301.05921 276.69889,388.20739 358.81822,420.27107 362.71416,417.15172 354.63937,446.02414 264.54156,476.88822 343.8441,529.62956 345.35592,624.85561 420.02002,565.73219 511.05425,593.72124 477.89678,504.44013 500.8419,471.77963 540.06207,469.61781 637.95718,464.22103" inkscape:connector-curvature="0" sodipodi:nodetypes="cccccccccccccccccccccccc"></path></svg>'},function(s,e){s.exports='<svg xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" id="svg832" version="1.1" viewBox="0 0 900 900" sodipodi:docname="superformula.svg" inkscape:version="0.92.2 (5c3e80d, 2017-08-06)"><path style="font-family:none;mix-blend-mode:normal;fill:none;fill-rule:nonzero;stroke:#000000;stroke-width:0.89864457;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:10;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:0.6" d="M 753.92226,448.18905 742.70566,451.3979 691.38526,453.71143 664.03896,455.75759 646.05236,457.65411 632.84626,459.44649 622.50646,461.15986 614.06026,462.81008 606.94966,464.40795 600.82626,465.96128 595.45916,467.47598 590.68786,468.95659 586.39636,470.40679 582.49846,471.82952 578.92856,473.22726 575.63536,474.60205 572.57846,475.95565 569.72496,477.28959 567.04836,478.60514 564.52646,479.90345 562.14106,481.18553 559.87646,482.45226 557.71956,483.70443 555.65896,484.94275 553.68506,486.16786 551.78926,487.38034 549.96426,488.5807 548.20346,489.76942 546.50116,490.94692 544.85246,492.11361 543.25256,493.26984 541.69756,494.41595 540.18386,495.55226 538.70826,496.67904 537.26766,497.79656 535.85936,498.90505 534.48106,500.00476 533.13066,501.09589 531.80576,502.17863 530.50506,503.25317 529.22636,504.31968 527.96846,505.37833 526.72976,506.42927 525.50886,507.47263 524.30476,508.50855 523.11616,509.53716 521.94216,510.55857 520.78156,511.57289 519.63366,512.58023 518.49756,513.5807 517.37246,514.57436 516.25766,515.56133 515.15246,516.54167 514.05606,517.51548 512.96806,518.48283 511.88776,519.44377 510.81486,520.39839 509.74856,521.34676 508.68846,522.28893 507.63426,523.22495 506.58546,524.15488 505.54166,525.07877 504.50236,525.99667 503.46756,526.90863 502.43646,527.8147 501.40906,528.71492 500.38506,529.60933 499.36406,530.49797 498.34586,531.38087 497.33006,532.25807 496.31656,533.12961 495.30506,533.99552 494.29546,534.85582 493.28736,535.71057 492.28076,536.55977 491.27536,537.40347 490.27096,538.24167 489.26736,539.07441 488.26456,539.90172 487.26226,540.72362 486.26036,541.54014 485.25866,542.3513 484.25706,543.1571 483.25546,543.95759 482.25376,544.75277 481.25176,545.54268 480.24926,546.32732 479.24636,547.10673 478.24276,547.8809 477.23856,548.64987 476.23346,549.41365 475.22746,550.17227 474.22056,550.92572 473.21246,551.67404 472.20326,552.41725 471.19286,553.15535 470.18086,553.88837 469.16776,554.61631 468.15296,555.33919 467.13686,556.05704 466.11896,556.76987 465.09946,557.47769 464.07826,558.18052 463.05516,558.87839 462.03016,559.57128 461.00336,560.25924 459.97446,560.94229 458.94366,561.62042 457.91076,562.29366 456.87556,562.96202 455.83836,563.62554 454.79886,564.28422 453.75716,564.93808 452.71296,565.58714 451.66646,566.23143 450.61766,566.87095 449.56616,567.50573 448.51236,568.13579 447.45586,568.76116 446.39686,569.38184 445.33516,569.99787 444.27086,570.60927 443.20386,571.21606 442.13406,571.81827 441.06146,572.41593 439.98596,573.00905 438.90776,573.59767 437.82656,574.18182 436.74236,574.76151 435.65526,575.3368 434.56506,575.9077 433.47186,576.47424 432.37546,577.03646 431.27586,577.5944 430.17316,578.14809 429.06726,578.69756 427.95796,579.24286 426.84556,579.78402 425.72966,580.3211 424.61026,580.85412 423.48746,581.38314 422.36136,581.9082 421.23146,582.42935 420.09806,582.94665 418.96116,583.46015 417.82046,583.96988 416.67596,584.47593 415.52766,584.97834 414.37556,585.47718 413.21966,585.97251 412.05966,586.4644 410.89566,586.95292 409.72756,587.43814 408.55536,587.92015 407.37886,588.39902 406.19816,588.87483 405.01316,589.34767 403.82356,589.81762 402.62946,590.28479 401.43076,590.74927 400.22756,591.21118 399.01946,591.67061 397.80646,592.12768 396.58856,592.58251 395.36566,593.03522 394.13756,593.48594 392.90426,593.93482 391.66546,594.38199 390.42116,594.82761 389.17136,595.27183 387.91566,595.71482 386.65416,596.15676 385.38656,596.59782 384.11286,597.03822 382.83276,597.47813 381.54616,597.9178 380.25286,598.35743 378.95266,598.79727 377.64536,599.23757 376.33086,599.67859 375.00886,600.12062 373.67916,600.56398 372.34146,601.00894 370.99546,601.45588 369.64106,601.90513 368.27776,602.35708 366.90546,602.81212 365.52366,603.27069 364.13216,603.73324 362.73056,604.20026 361.31836,604.67225 359.89526,605.14979 358.46076,605.63346 357.01456,606.1239 355.55586,606.62178 354.0842,607.12785 352.59912,607.64287 351.09992,608.16772 349.58593,608.7033 348.05643,609.25061 346.51063,609.81071 344.94769,610.38478 343.36669,610.97406 341.76663,611.57996 340.14644,612.20395 338.50494,612.84771 336.84084,613.51302 335.15273,614.20188 333.43907,614.91647 331.69815,615.65921 329.92811,616.43279 328.12686,617.24018 326.29209,618.08473 324.42122,618.97016 322.51137,619.90067 320.55932,620.88102 318.56139,621.91658 316.51345,623.0135 314.41075,624.17883 312.24788,625.42069 310.01856,626.74852 307.71552,628.17335 305.33024,629.70816 302.85262,631.3684 300.27069,633.1726 297.56994,635.14321 294.73276,637.30776 291.73733,639.70055 288.55627,642.36484 285.1546,645.35633 281.48667,648.74813 277.49137,652.63879 273.08447,657.1651 268.14536,662.52416 262.49315,669.01363 255.8394,677.11151 247.68406,687.65223 237.04834,702.28078 221.60319,724.94027 193.93942,768.22827 185.55216,776.33775 188.38154,765.01943 212.03817,719.41791 223.93927,694.71228 231.29011,678.1872 236.34097,665.8541 240.02706,656.04285 242.82101,647.90316 244.99253,640.94624 246.70898,634.86659 248.08075,629.46124 249.18418,624.58882 250.07403,620.14715 250.79084,616.06012 251.36534,612.2696 251.82131,608.73025 252.17754,605.40603 252.44905,602.2679 252.64805,599.29211 252.78461,596.45897 252.86702,593.75206 252.90229,591.15751 252.89634,588.66347 252.85419,586.25983 252.78018,583.93779 252.67804,581.68975 252.55101,579.50905 252.40194,577.38981 252.2333,575.32688 252.04731,573.31565 251.84591,571.35202 251.63082,569.43233 251.4036,567.55328 251.16562,565.71191 250.91813,563.90554 250.66226,562.13173 250.39902,560.38827 250.12933,558.67314 249.85402,556.98451 249.57386,555.32068 249.28954,553.6801 249.00171,552.06135 248.71094,550.4631 248.41778,548.88416 248.1227,547.3234 247.82619,545.77976 247.52866,544.25229 247.23049,542.74008 246.93205,541.24232 246.63368,539.75819 246.33569,538.28699 246.03837,536.82802 245.742,535.38065 245.44682,533.94429 245.15308,532.51838 244.861,531.10239 244.57077,529.69582 244.28261,528.2982 243.99669,526.9091 243.71318,525.52811 243.43226,524.15484 243.15406,522.78891 242.87873,521.42998 242.60641,520.07771 242.33723,518.73181 242.07131,517.39195 241.80877,516.05789 241.5497,514.72933 241.29421,513.40605 241.04241,512.08777 240.79437,510.77429 240.55021,509.46538 240.30998,508.16085 240.07377,506.8605 239.84166,505.56412 239.61371,504.27155 239.39,502.98262 239.17059,501.69716 238.95554,500.41502 238.7449,499.13605 238.53874,497.86011 238.3371,496.58705 238.14003,495.31676 237.9476,494.0491 237.75982,492.78396 237.57676,491.52122 237.39845,490.26077 237.22494,489.00251 237.05625,487.74633 236.89244,486.49213 236.73351,485.23982 236.57952,483.98931 236.43049,482.74052 236.28645,481.49336 236.14743,480.24773 236.01345,479.00359 235.88455,477.76083 235.76074,476.5194 235.64203,475.27922 235.52847,474.04021 235.42007,472.80232 235.31684,471.56548 235.2188,470.32962 235.12597,469.09468 235.03836,467.86062 234.95599,466.62736 234.87888,465.39485 234.80703,464.16303 234.74046,462.93185 234.67917,461.70126 234.62319,460.4712 234.5725,459.24163 234.52714,458.01249 234.48709,456.78373 234.45238,455.5553 234.42298,454.32716 234.39894,453.09925 234.38023,451.87153 234.36687,450.64395 234.35884,449.41647 234.35617,448.18904 234.35884,446.96161 234.36687,445.73412 234.38023,444.50654 234.39894,443.27883 234.42298,442.05092 234.45238,440.82278 234.48709,439.59435 234.52714,438.36559 234.5725,437.13645 234.62319,435.90687 234.67917,434.67682 234.74046,433.44623 234.80703,432.21505 234.87888,430.98323 234.95599,429.75072 235.03836,428.51746 235.12597,427.28339 235.2188,426.04845 235.31684,424.8126 235.42007,423.57576 235.52847,422.33787 235.64203,421.09885 235.76074,419.85868 235.88455,418.61725 236.01345,417.37449 236.14743,416.13035 236.28645,414.88472 236.43049,413.63756 236.57952,412.38877 236.73351,411.13826 236.89244,409.88594 237.05625,408.63174 237.22494,407.37557 237.39845,406.1173 237.57676,404.85686 237.75982,403.59412 237.9476,402.32898 238.14003,401.06132 238.3371,399.79102 238.53874,398.51797 238.7449,397.24203 238.95554,395.96306 239.17059,394.68092 239.39,393.39546 239.61371,392.10653 239.84166,390.81396 240.07377,389.51758 240.30998,388.21723 240.55021,386.9127 240.79437,385.60379 241.04241,384.29031 241.29421,382.97203 241.5497,381.64874 241.80877,380.32019 242.07131,378.98612 242.33723,377.64627 242.60641,376.30037 242.87873,374.9481 243.15406,373.58917 243.43226,372.22324 243.71318,370.84997 243.99669,369.46898 244.28261,368.07988 244.57077,366.68226 244.861,365.27569 245.15308,363.8597 245.44682,362.43379 245.742,360.99743 246.03837,359.55006 246.33569,358.09109 246.63368,356.61989 246.93205,355.13576 247.23049,353.63799 247.52866,352.12579 247.82619,350.59832 248.1227,349.05468 248.41778,347.49392 248.71094,345.91497 249.00171,344.31673 249.28954,342.69798 249.57386,341.0574 249.85402,339.39357 250.12933,337.70494 250.39902,335.98981 250.66226,334.24635 250.91813,332.47254 251.16562,330.66616 251.4036,328.8248 251.63082,326.94575 251.84591,325.02606 252.04731,323.06243 252.2333,321.0512 252.40194,318.98826 252.55101,316.86903 252.67804,314.68833 252.78018,312.44029 252.85419,310.11826 252.89634,307.7146 252.90229,305.22057 252.86702,302.62601 252.78461,299.9191 252.64805,297.08597 252.44905,294.11017 252.17754,290.97204 251.82131,287.64783 251.36534,284.10847 250.79084,280.31796 250.07403,276.23093 249.18418,271.78927 248.08075,266.91684 246.70898,261.51148 244.99253,255.43184 242.82101,248.47492 240.02706,240.33523 236.34097,230.52398 231.29011,218.19088 223.93927,201.66581 212.03817,176.96017 188.38154,131.35865 185.55216,120.04033 193.93942,128.14981 221.60319,171.43781 237.04834,194.09729 247.68406,208.72585 255.8394,219.26657 262.49315,227.36444 268.14536,233.85392 273.08447,239.21298 277.49137,243.73928 281.48667,247.62995 285.1546,251.02176 288.55627,254.01323 291.73733,256.67753 294.73276,259.07032 297.56994,261.23487 300.27069,263.20547 302.85262,265.00968 305.33024,266.66992 307.71552,268.20473 310.01856,269.62956 312.24788,270.95739 314.41075,272.19925 316.51345,273.36458 318.56139,274.4615 320.55932,275.49706 322.51137,276.47741 324.42122,277.40792 326.29209,278.29335 328.12686,279.1379 329.92811,279.94529 331.69815,280.71887 333.43907,281.46161 335.15273,282.1762 336.84084,282.86506 338.50494,283.53037 340.14644,284.17413 341.76663,284.79812 343.36669,285.40401 344.94769,285.99331 346.51063,286.56736 348.05643,287.12747 349.58593,287.67477 351.09992,288.21036 352.59912,288.73521 354.0842,289.25023 355.55586,289.7563 357.01456,290.25419 358.46076,290.74462 359.89526,291.22828 361.31836,291.70583 362.73056,292.17782 364.13216,292.64484 365.52366,293.10739 366.90546,293.56596 368.27776,294.021 369.64106,294.47295 370.99546,294.9222 372.34146,295.36913 373.67916,295.81411 375.00886,296.25745 376.33086,296.69948 377.64536,297.14051 378.95266,297.58081 380.25286,298.02065 381.54616,298.46028 382.83276,298.89995 384.11286,299.33987 385.38656,299.78026 386.65416,300.22132 387.91566,300.66326 389.17136,301.10625 390.42116,301.55047 391.66546,301.99609 392.90426,302.44326 394.13756,302.89214 395.36566,303.34286 396.58856,303.79557 397.80646,304.2504 399.01946,304.70747 400.22756,305.1669 401.43076,305.62881 402.62946,306.09329 403.82356,306.56046 405.01316,307.03041 406.19816,307.50325 407.37886,307.97905 408.55536,308.45793 409.72756,308.93994 410.89566,309.42516 412.05966,309.91368 413.21966,310.40557 414.37556,310.9009 415.52766,311.39974 416.67596,311.90215 417.82046,312.4082 418.96116,312.91794 420.09806,313.43143 421.23146,313.94872 422.36136,314.46988 423.48746,314.99494 424.61026,315.52396 425.72966,316.05698 426.84556,316.59405 427.95796,317.13522 429.06726,317.68052 430.17316,318.22999 431.27586,318.78368 432.37546,319.34162 433.47186,319.90384 434.56506,320.47038 435.65526,321.04128 436.74236,321.61657 437.82656,322.19626 438.90776,322.78041 439.98596,323.36903 441.06146,323.96215 442.13406,324.55981 443.20386,325.16201 444.27086,325.7688 445.33516,326.3802 446.39686,326.99624 447.45586,327.61692 448.51236,328.24229 449.56616,328.87235 450.61766,329.50713 451.66646,330.14665 452.71296,330.79094 453.75716,331.44 454.79886,332.09386 455.83836,332.75254 456.87556,333.41606 457.91076,334.08443 458.94366,334.75766 459.97446,335.43579 461.00336,336.11884 462.03016,336.80679 463.05516,337.49969 464.07826,338.19756 465.09946,338.90038 466.11896,339.60821 467.13686,340.32104 468.15296,341.03889 469.16776,341.76177 470.18086,342.48971 471.19286,343.22273 472.20326,343.96083 473.21246,344.70404 474.22056,345.45236 475.22746,346.20582 476.23346,346.96443 477.23856,347.72821 478.24276,348.49718 479.24636,349.27136 480.24926,350.05076 481.25176,350.8354 482.25376,351.62531 483.25546,352.42049 484.25706,353.22098 485.25866,354.02678 486.26036,354.83794 487.26226,355.65446 488.26456,356.47636 489.26736,357.30366 490.27096,358.13641 491.27536,358.97461 492.28076,359.8183 493.28736,360.6675 494.29546,361.52225 495.30506,362.38256 496.31656,363.24847 497.33006,364.12001 498.34586,364.99721 499.36406,365.88011 500.38506,366.76874 501.40906,367.66316 502.43646,368.56337 503.46756,369.46945 504.50236,370.3814 505.54166,371.29931 506.58546,372.2232 507.63426,373.15313 508.68846,374.08915 509.74856,375.03132 510.81486,375.97969 511.88776,376.93431 512.96806,377.89526 514.05606,378.8626 515.15246,379.83641 516.25766,380.81675 517.37246,381.80372 518.49756,382.79738 519.63366,383.79785 520.78156,384.80519 521.94216,385.81951 523.11616,386.84092 524.30476,387.86953 525.50886,388.90544 526.72976,389.94881 527.96846,390.99974 529.22636,392.0584 530.50506,393.12491 531.80576,394.19945 533.13066,395.28219 534.48106,396.37332 535.85936,397.47302 537.26766,398.58152 538.70826,399.69904 540.18386,400.82581 541.69756,401.96212 543.25256,403.10824 544.85246,404.26446 546.50116,405.43116 548.20346,406.60866 549.96426,407.79738 551.78926,408.99774 553.68506,410.21022 555.65896,411.43533 557.71956,412.67365 559.87646,413.92583 562.14106,415.19255 564.52646,416.47463 567.04836,417.77294 569.72496,419.08849 572.57846,420.42242 575.63536,421.77603 578.92856,423.15082 582.49846,424.54856 586.39636,425.97129 590.68786,427.42149 595.45916,428.9021 600.82626,430.41679 606.94966,431.97013 614.06026,433.568 622.50646,435.21822 632.84626,436.93159 646.05236,438.72397 664.03896,440.62049 691.38526,442.66664 742.70566,444.98018 753.92226,448.18902" id="path4" inkscape:connector-curvature="0"></path></svg>'},,,,function(s,e,r){"use strict";r.r(e);var l={CircleDiameter:4,BiasTowards:"Center",MaxWalkers:4e3,ShowWalkers:!1,WalkerSource:"Edges",EdgeMargin:200},o=r(1),c=r(3);let u,n={dla:r(6),polygons:r(7),supershape:r(8)},y=n.supershape,f=!0;new p5(function(s){function e(){u.removeAll(),function(s){let e=c.a.loadFromFileContents(s);for(let s of e)s.stuck=!0,s.solid=!1,s.x+=window.innerWidth/2-450,s.y+=window.innerHeight/2-450;u.createShapesFromPaths(e)}(y),u.createDefaultWalkers(),u.createDefaultWalkers(void 0,"Offscreen")}s.setup=function(){s.createCanvas(window.innerWidth,window.innerHeight),s.colorMode(s.HSB,255),s.ellipseMode(s.CENTER),u=new o.a(s,l),e()},s.draw=function(){u.iterate(),u.draw(),f&&(s.fill(0),s.noStroke(),s.textSize(20),s.textStyle(s.BOLD),s.text("05 - SVG input",20,40),s.textStyle(s.NORMAL),s.fill(150),s.text("Growth using shapes from SVG files\n\nKey commands:\n1 - SVG text\n2 - compound polygon\n3 - supershape",20,70))},s.keyReleased=function(){switch(s.key){case" ":u.togglePause();break;case"w":u.toggleShowWalkers();break;case"c":u.toggleShowClusters();break;case"r":e();break;case"f":u.toggleUseFrame(),e();break;case"s":u.toggleShowShapes(),restartWorld();break;case"l":u.toggleLineRenderingMode();break;case"e":u.export();break;case"1":y=n.dla,e();break;case"2":y=n.polygons,e();break;case"3":y=n.supershape,e()}}})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,