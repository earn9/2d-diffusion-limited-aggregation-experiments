!function(t){var e={};function s(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=t,s.c=e,s.d=function(t,e,r){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(s.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)s.d(r,i,function(e){return t[e]}.bind(null,i));return r},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=12)}([function(t,e,s){(function(s){var r,i,n;i=[],void 0===(n="function"==typeof(r=function(){"use strict";function e(t,e,s){var r=new XMLHttpRequest;r.open("GET",t),r.responseType="blob",r.onload=function(){o(r.response,e,s)},r.onerror=function(){console.error("could not download file")},r.send()}function r(t){var e=new XMLHttpRequest;return e.open("HEAD",t,!1),e.send(),200<=e.status&&299>=e.status}function i(t){try{t.dispatchEvent(new MouseEvent("click"))}catch(s){var e=document.createEvent("MouseEvents");e.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),t.dispatchEvent(e)}}var n="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof s&&s.global===s?s:void 0,o=n.saveAs||("object"!=typeof window||window!==n?function(){}:"download"in HTMLAnchorElement.prototype?function(t,s,o){var a=n.URL||n.webkitURL,h=document.createElement("a");s=s||t.name||"download",h.download=s,h.rel="noopener","string"==typeof t?(h.href=t,h.origin===location.origin?i(h):r(h.href)?e(t,s,o):i(h,h.target="_blank")):(h.href=a.createObjectURL(t),setTimeout((function(){a.revokeObjectURL(h.href)}),4e4),setTimeout((function(){i(h)}),0))}:"msSaveOrOpenBlob"in navigator?function(t,s,n){if(s=s||t.name||"download","string"!=typeof t)navigator.msSaveOrOpenBlob(function(t,e){return void 0===e?e={autoBom:!1}:"object"!=typeof e&&(console.warn("Deprecated: Expected third argument to be a object"),e={autoBom:!e}),e.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(t.type)?new Blob(["\ufeff",t],{type:t.type}):t}(t,n),s);else if(r(t))e(t,s,n);else{var o=document.createElement("a");o.href=t,o.target="_blank",setTimeout((function(){i(o)}))}}:function(t,s,r,i){if((i=i||open("","_blank"))&&(i.document.title=i.document.body.innerText="downloading..."),"string"==typeof t)return e(t,s,r);var o="application/octet-stream"===t.type,a=/constructor/i.test(n.HTMLElement)||n.safari,h=/CriOS\/[\d]+/.test(navigator.userAgent);if((h||o&&a)&&"object"==typeof FileReader){var l=new FileReader;l.onloadend=function(){var t=l.result;t=h?t:t.replace(/^data:[^;]*;/,"data:attachment/file;"),i?i.location.href=t:location=t,i=null},l.readAsDataURL(t)}else{var c=n.URL||n.webkitURL,u=c.createObjectURL(t);i?i.location=u:location.href=u,i=null,setTimeout((function(){c.revokeObjectURL(u)}),4e4)}});n.saveAs=o.saveAs=o,t.exports=o})?r.apply(e,i):r)||(t.exports=n)}).call(this,s(2))},function(t,e,s){"use strict";s.d(e,"a",(function(){return U}));var r={CircleDiameter:5,InitialClusterType:"Random",WalkerSource:"Random",MaxWalkers:5e3,EdgeMargin:0,PruneOldWalkers:!1,MaxAge:30,ReplenishWalkers:!1,PruneDistantWalkers:!1,MaxWanderDistance:20,VaryDiameterByDistance:!1,VaryDiameterRandomly:!1,ShowClusters:!0,ShowWalkers:!0,ShowShapes:!0,BiasTowards:"",BiasForce:1,UsePerWalkerBias:!0,UseFrame:!0,FrameSize:900,CaptureLines:!0,RenderMode:"Shapes",UseStroke:!1,UseColors:!1,BackgroundColor:{h:230,s:20,b:40},WalkerColor:{h:200,s:30,b:44},ClusterColor:{h:30,s:70,b:80},ShapeColor:{h:100,s:50,b:80},LineColor:{h:10,s:70,b:100},FrameColor:{h:0,s:100,b:100}};const i=[];class n{constructor(){this._bvh_parent=null,this._bvh_branch=!0,this._bvh_left=null,this._bvh_right=null,this._bvh_sort=0,this._bvh_min_x=0,this._bvh_min_y=0,this._bvh_max_x=0,this._bvh_max_y=0}static getBranch(){return i.length?i.pop():new n}static releaseBranch(t){i.push(t)}static sortBranches(t,e){return t.sort>e.sort?-1:1}}class o{constructor(){this._hierarchy=null,this._bodies=[],this._dirty_branches=[]}insert(t,e=!1){if(!e){const e=t._bvh;if(e&&e!==this)throw new Error("Body belongs to another collision system");t._bvh=this,this._bodies.push(t)}const s=t._polygon,r=t.x,i=t.y;s&&(t._dirty_coords||t.x!==t._x||t.y!==t._y||t.angle!==t._angle||t.scale_x!==t._scale_x||t.scale_y!==t._scale_y)&&t._calculateCoords();const o=t._bvh_padding,a=s?0:t.radius*t.scale,h=(s?t._min_x:r-a)-o,l=(s?t._min_y:i-a)-o,c=(s?t._max_x:r+a)+o,u=(s?t._max_y:i+a)+o;t._bvh_min_x=h,t._bvh_min_y=l,t._bvh_max_x=c,t._bvh_max_y=u;let p=this._hierarchy,_=0;if(p)for(;;){if(!p._bvh_branch){const e=p._bvh_parent,s=p._bvh_min_x,r=p._bvh_min_y,i=p._bvh_max_x,o=p._bvh_max_y,a=p._bvh_parent=t._bvh_parent=n.getBranch();a._bvh_parent=e,a._bvh_left=p,a._bvh_right=t,a._bvh_sort=_++,a._bvh_min_x=h<s?h:s,a._bvh_min_y=l<r?l:r,a._bvh_max_x=c>i?c:i,a._bvh_max_y=u>o?u:o,e?e._bvh_left===p?e._bvh_left=a:e._bvh_right=a:this._hierarchy=a;break}{const t=p._bvh_left,e=t._bvh_min_y,s=t._bvh_max_x,r=t._bvh_max_y,i=h<t._bvh_min_x?h:t._bvh_min_x,n=l<e?l:e,o=c>s?c:s,a=u>r?u:r,d=(o-i)*(a-n)-(s-t._bvh_min_x)*(r-e),y=p._bvh_right,m=y._bvh_min_x,f=y._bvh_min_y,g=y._bvh_max_x,v=y._bvh_max_y,x=h<m?h:m,b=l<f?l:f,w=c>g?c:g,O=u>v?u:v,T=(w-x)*(O-b)-(g-m)*(v-f);p._bvh_sort=_++,p._bvh_min_x=i<x?i:x,p._bvh_min_y=n<b?n:b,p._bvh_max_x=o>w?o:w,p._bvh_max_y=a>O?a:O,p=d<=T?t:y}}else this._hierarchy=t}remove(t,e=!1){if(!e){const e=t._bvh;if(e&&e!==this)throw new Error("Body belongs to another collision system");t._bvh=null,this._bodies.splice(this._bodies.indexOf(t),1)}if(this._hierarchy===t)return void(this._hierarchy=null);const s=t._bvh_parent,r=s._bvh_parent,i=s._bvh_left,o=i===t?s._bvh_right:i;if(o._bvh_parent=r,o._bvh_branch&&(o._bvh_sort=s._bvh_sort),r){r._bvh_left===s?r._bvh_left=o:r._bvh_right=o;let t=r;for(;t;){const e=t._bvh_left,s=e._bvh_min_x,r=e._bvh_min_y,i=e._bvh_max_x,n=e._bvh_max_y,o=t._bvh_right,a=o._bvh_min_x,h=o._bvh_min_y,l=o._bvh_max_x,c=o._bvh_max_y;t._bvh_min_x=s<a?s:a,t._bvh_min_y=r<h?r:h,t._bvh_max_x=i>l?i:l,t._bvh_max_y=n>c?n:c,t=t._bvh_parent}}else this._hierarchy=o;n.releaseBranch(s)}update(){const t=this._bodies,e=t.length;for(let s=0;s<e;++s){const e=t[s];let r=!1;if(r||e.padding===e._bvh_padding||(e._bvh_padding=e.padding,r=!0),!r){const t=e._polygon;t&&(e._dirty_coords||e.x!==e._x||e.y!==e._y||e.angle!==e._angle||e.scale_x!==e._scale_x||e.scale_y!==e._scale_y)&&e._calculateCoords();const s=e.x,i=e.y,n=t?0:e.radius*e.scale,o=t?e._min_x:s-n,a=t?e._min_y:i-n,h=t?e._max_x:s+n,l=t?e._max_y:i+n;r=o<e._bvh_min_x||a<e._bvh_min_y||h>e._bvh_max_x||l>e._bvh_max_y}r&&(this.remove(e,!0),this.insert(e,!0))}}potentials(t){const e=[],s=t._bvh_min_x,r=t._bvh_min_y,i=t._bvh_max_x,n=t._bvh_max_y;let o=this._hierarchy,a=!0;if(!o||!o._bvh_branch)return e;for(;o;){if(a){a=!1;let t=o._bvh_branch?o._bvh_left:null;for(;t&&t._bvh_max_x>=s&&t._bvh_max_y>=r&&t._bvh_min_x<=i&&t._bvh_min_y<=n;)o=t,t=o._bvh_branch?o._bvh_left:null}const h=o._bvh_branch,l=h?o._bvh_right:null;if(l&&l._bvh_max_x>s&&l._bvh_max_y>r&&l._bvh_min_x<i&&l._bvh_min_y<n)o=l,a=!0;else{h||o===t||e.push(o);let s=o._bvh_parent;if(!s)break;for(;s&&s._bvh_right===o;)o=s,s=o._bvh_parent;o=s}}return e}draw(t){const e=this._bodies,s=e.length;for(let r=0;r<s;++r)e[r].draw(t)}drawBVH(t){let e=this._hierarchy,s=!0;for(;e;){if(s){s=!1;let t=e._bvh_branch?e._bvh_left:null;for(;t;)e=t,t=e._bvh_branch?e._bvh_left:null}const r=e._bvh_branch,i=e._bvh_min_x,n=e._bvh_min_y,o=e._bvh_max_x,a=e._bvh_max_y,h=r?e._bvh_right:null;if(t.moveTo(i,n),t.lineTo(o,n),t.lineTo(o,a),t.lineTo(i,a),t.lineTo(i,n),h)e=h,s=!0;else{let t=e._bvh_parent;if(!t)break;for(;t&&t._bvh_right===e;)e=t,t=e._bvh_parent;e=t}}}}class a{constructor(){this.collision=!1,this.a=null,this.b=null,this.a_in_b=!1,this.a_in_b=!1,this.overlap=0,this.overlap_x=0,this.overlap_y=0}}function h(t,e,s=null,r=!0){const i=t._polygon,n=e._polygon;let o=!1;return s&&(s.a=t,s.b=e,s.a_in_b=!0,s.b_in_a=!0,s.overlap=null,s.overlap_x=0,s.overlap_y=0),i&&(t._dirty_coords||t.x!==t._x||t.y!==t._y||t.angle!==t._angle||t.scale_x!==t._scale_x||t.scale_y!==t._scale_y)&&t._calculateCoords(),n&&(e._dirty_coords||e.x!==e._x||e.y!==e._y||e.angle!==e._angle||e.scale_x!==e._scale_x||e.scale_y!==e._scale_y)&&e._calculateCoords(),r&&!function(t,e){const s=t._polygon,r=s?0:t.x,i=s?0:t.y,n=s?0:t.radius*t.scale,o=s?t._min_x:r-n,a=s?t._min_y:i-n,h=s?t._max_x:r+n,l=s?t._max_y:i+n,c=e._polygon,u=c?0:e.x,p=c?0:e.y,_=c?0:e.radius*e.scale,d=c?e._min_x:u-_,y=c?e._min_y:p-_,m=c?e._max_x:u+_,f=c?e._max_y:p+_;return o<m&&a<f&&h>d&&l>y}(t,e)||(i&&t._dirty_normals&&t._calculateNormals(),n&&e._dirty_normals&&e._calculateNormals(),o=i&&n?function(t,e,s=null){const r=t._coords.length,i=e._coords.length;if(2===r&&2===i){const r=t._coords,i=e._coords;return s&&(s.overlap=0),r[0]===i[0]&&r[1]===i[1]}const n=t._coords,o=e._coords,a=t._normals,h=e._normals;if(r>2)for(let t=0,e=1;t<r;t+=2,e+=2)if(c(n,o,a[t],a[e],s))return!1;if(i>2)for(let t=0,e=1;t<i;t+=2,e+=2)if(c(n,o,h[t],h[e],s))return!1;return!0}(t,e,s):i?l(t,e,s,!1):n?l(e,t,s,!0):function(t,e,s=null){const r=t.radius*t.scale,i=e.radius*e.scale,n=e.x-t.x,o=e.y-t.y,a=r+i,h=n*n+o*o;if(h>a*a)return!1;if(s){const t=Math.sqrt(h);s.a_in_b=r<=i&&t<=i-r,s.b_in_a=i<=r&&t<=r-i,s.overlap=a-t,s.overlap_x=n/t,s.overlap_y=o/t}return!0}(t,e,s)),s&&(s.collision=o),o}function l(t,e,s=null,r=!1){const i=t._coords,n=t._edges,o=t._normals,a=e.x,h=e.y,l=e.radius*e.scale,c=2*l,u=l*l,p=i.length;let _=!0,d=!0,y=null,m=0,f=0;if(2===p){const t=a-i[0],e=h-i[1],r=t*t+e*e;if(r>u)return!1;if(s){const s=Math.sqrt(r);y=l-s,m=t/s,f=e/s,d=!1}}else for(let t=0,e=1;t<p;t+=2,e+=2){const r=a-i[t],g=h-i[e],v=n[t],x=n[e],b=r*v+g*x,w=b<0?-1:b>v*v+x*x?1:0;let O=!1,T=0,C=0,k=0;if(s&&_&&r*r+g*g>u&&(_=!1),w){const e=-1===w,o=e?0===t?p-2:t-2:t===p-2?0:t+2,c=o+1,_=a-i[o],y=h-i[c],m=n[o],f=n[c],v=_*m+y*f;if((v<0?-1:v>m*m+f*f?1:0)===-w){const t=e?r:_,i=e?g:y,n=t*t+i*i;if(n>u)return!1;if(s){const e=Math.sqrt(n);O=!0,T=l-e,C=t/e,k=i/e,d=!1}}}else{const i=o[t],n=o[e],a=r*i+g*n,h=a<0?-a:a;if(a>0&&h>l)return!1;s&&(O=!0,T=l-a,C=i,k=n,(d&&a>=0||T<c)&&(d=!1))}O&&(null===y||y>T)&&(y=T,m=C,f=k)}return s&&(s.a_in_b=r?d:_,s.b_in_a=r?_:d,s.overlap=y,s.overlap_x=r?-m:m,s.overlap_y=r?-f:f),!0}function c(t,e,s,r,i=null){const n=t.length,o=e.length;if(!n||!o)return!0;let a=null,h=null,l=null,c=null;for(let e=0,i=1;e<n;e+=2,i+=2){const n=t[e]*s+t[i]*r;(null===a||a>n)&&(a=n),(null===h||h<n)&&(h=n)}for(let t=0,i=1;t<o;t+=2,i+=2){const n=e[t]*s+e[i]*r;(null===l||l>n)&&(l=n),(null===c||c<n)&&(c=n)}if(a>c||h<l)return!0;if(i){let t=0;if(a<l)if(i.a_in_b=!1,h<c)t=h-l,i.b_in_a=!1;else{const e=h-l,s=c-a;t=e<s?e:-s}else if(i.b_in_a=!1,h>c)t=a-c,i.a_in_b=!1;else{const e=h-l,s=c-a;t=e<s?e:-s}const e=i.overlap,n=t<0?-t:t;if(null===e||e>n){const e=t<0?-1:1;i.overlap=n,i.overlap_x=s*e,i.overlap_y=r*e}}return!1}class u{constructor(t=0,e=0,s=0){this.x=t,this.y=e,this.padding=s,this._circle=!1,this._polygon=!1,this._point=!1,this._bvh=null,this._bvh_parent=null,this._bvh_branch=!1,this._bvh_padding=s,this._bvh_min_x=0,this._bvh_min_y=0,this._bvh_max_x=0,this._bvh_max_y=0}collides(t,e=null,s=!0){return h(this,t,e,s)}potentials(){const t=this._bvh;if(null===t)throw new Error("Body does not belong to a collision system");return t.potentials(this)}remove(){const t=this._bvh;t&&t.remove(this,!1)}createResult(){return new a}static createResult(){return new a}}class p extends u{constructor(t=0,e=0,s=0,r=1,i=0){super(t,e,i),this.radius=s,this.scale=r}draw(t){const e=this.x,s=this.y,r=this.radius*this.scale;t.moveTo(e+r,s),t.arc(e,s,r,0,2*Math.PI)}}class _ extends u{constructor(t=0,e=0,s=[],r=0,i=1,n=1,o=0){super(t,e,o),this.angle=r,this.scale_x=i,this.scale_y=n,this._polygon=!0,this._x=t,this._y=e,this._angle=r,this._scale_x=i,this._scale_y=n,this._min_x=0,this._min_y=0,this._max_x=0,this._max_y=0,this._points=null,this._coords=null,this._edges=null,this._normals=null,this._dirty_coords=!0,this._dirty_normals=!0,_.prototype.setPoints.call(this,s)}draw(t){(this._dirty_coords||this.x!==this._x||this.y!==this._y||this.angle!==this._angle||this.scale_x!==this._scale_x||this.scale_y!==this._scale_y)&&this._calculateCoords();const e=this._coords;if(2===e.length)t.moveTo(e[0],e[1]),t.arc(e[0],e[1],1,0,2*Math.PI);else{t.moveTo(e[0],e[1]);for(let s=2;s<e.length;s+=2)t.lineTo(e[s],e[s+1]);e.length>4&&t.lineTo(e[0],e[1])}}setPoints(t){const e=t.length;this._points=new Float64Array(2*e),this._coords=new Float64Array(2*e),this._edges=new Float64Array(2*e),this._normals=new Float64Array(2*e);const s=this._points;for(let r=0,i=0,n=1;r<e;++r,i+=2,n+=2){const e=t[r];s[i]=e[0],s[n]=e[1]}this._dirty_coords=!0}_calculateCoords(){const t=this.x,e=this.y,s=this.angle,r=this.scale_x,i=this.scale_y,n=this._points,o=this._coords,a=n.length;let h,l,c,u;for(let p=0,_=1;p<a;p+=2,_+=2){let a=n[p]*r,d=n[_]*i;if(s){const t=Math.cos(s),e=Math.sin(s),r=a;a=r*t-d*e,d=r*e+d*t}a+=t,d+=e,o[p]=a,o[_]=d,0===p?(h=l=a,c=u=d):(a<h?h=a:a>l&&(l=a),d<c?c=d:d>u&&(u=d))}this._x=t,this._y=e,this._angle=s,this._scale_x=r,this._scale_y=i,this._min_x=h,this._min_y=c,this._max_x=l,this._max_y=u,this._dirty_coords=!1,this._dirty_normals=!0}_calculateNormals(){const t=this._coords,e=this._edges,s=this._normals,r=t.length;for(let i=0,n=1;i<r;i+=2,n+=2){const o=i+2<r?i+2:0,a=t[o]-t[i],h=t[o+1]-t[n],l=a||h?Math.sqrt(a*a+h*h):0;e[i]=a,e[n]=h,s[i]=l?h/l:0,s[n]=l?-a/l:0}this._dirty_normals=!1}}class d extends _{constructor(t=0,e=0,s=0){super(t,e,[[0,0]],0,1,1,s),this._point=!0}}d.prototype.setPoints=void 0;class y{constructor(){this._bvh=new o}createCircle(t=0,e=0,s=0,r=1,i=0){const n=new p(t,e,s,r,i);return this._bvh.insert(n),n}createPolygon(t=0,e=0,s=[[0,0]],r=0,i=1,n=1,o=0){const a=new _(t,e,s,r,i,n,o);return this._bvh.insert(a),a}createPoint(t=0,e=0,s=0){const r=new d(t,e,s);return this._bvh.insert(r),r}createResult(){return new a}static createResult(){return new a}insert(...t){for(const e of t)this._bvh.insert(e,!1);return this}remove(...t){for(const e of t)this._bvh.remove(e,!1);return this}update(){return this._bvh.update(),this}draw(t){return this._bvh.draw(t)}drawBVH(t){return this._bvh.drawBVH(t)}potentials(t){return this._bvh.potentials(t)}collides(t,e,s=null,r=!0){return h(t,e,s,r)}}var m=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var s=arguments[e];for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(t[r]=s[r])}return t};var f=function(t){var e=t.type,s=function(t,e){var s={};for(var r in t)e.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(t,r)&&(s[r]=t[r]);return s}(t,["type"]);switch(e){case"circle":return g(s);case"ellipse":return v(s);case"line":return x(s);case"path":return k(s);case"polygon":return M(s);case"polyline":return E(s);case"rect":return S(s);case"g":return F(s);default:throw new Error("Not a valid shape type")}},g=function(t){var e=t.cx,s=t.cy,r=t.r;return[{x:e,y:s-r,moveTo:!0},{x:e,y:s+r,curve:{type:"arc",rx:r,ry:r,sweepFlag:1}},{x:e,y:s-r,curve:{type:"arc",rx:r,ry:r,sweepFlag:1}}]},v=function(t){var e=t.cx,s=t.cy,r=t.rx,i=t.ry;return[{x:e,y:s-i,moveTo:!0},{x:e,y:s+i,curve:{type:"arc",rx:r,ry:i,sweepFlag:1}},{x:e,y:s-i,curve:{type:"arc",rx:r,ry:i,sweepFlag:1}}]},x=function(t){var e=t.x1,s=t.x2;return[{x:e,y:t.y1,moveTo:!0},{x:s,y:t.y2}]},b=/[MmLlHhVvCcSsQqTtAaZz]/g,w={A:7,C:6,H:1,L:2,M:2,Q:4,S:4,T:2,V:1,Z:0},O=["a","c","h","l","m","q","s","t","v"],T=function(t){return-1!==O.indexOf(t)},C=["xAxisRotation","largeArcFlag","sweepFlag"],k=function(t){for(var e=t.d,s=function(t){return t.match(b)}(e),r=function(t){return t.split(b).map((function(t){return t.replace(/[0-9]+-/g,(function(t){return t.slice(0,-1)+" -"}))})).map((function(t){return t.replace(/\.[0-9]+/g,(function(t){return t+" "}))})).map((function(t){return t.trim()})).filter((function(t){return t.length>0})).map((function(t){return t.split(/[ ,]+/).map(parseFloat).filter((function(t){return!isNaN(t)}))}))}(e),i=[],n=void 0,o=0,a=s.length;o<a;o++){var h=s[o],l=h.toUpperCase(),c=w[l],u=T(h);if(c>0)for(var p=r.shift(),_=p.length/c,d=0;d<_;d++){var y=i[i.length-1]||{x:0,y:0};switch(l){case"M":var m=(u?y.x:0)+p.shift(),f=(u?y.y:0)+p.shift();0===d?(n={x:m,y:f},i.push({x:m,y:f,moveTo:!0})):i.push({x:m,y:f});break;case"L":i.push({x:(u?y.x:0)+p.shift(),y:(u?y.y:0)+p.shift()});break;case"H":i.push({x:(u?y.x:0)+p.shift(),y:y.y});break;case"V":i.push({x:y.x,y:(u?y.y:0)+p.shift()});break;case"A":i.push({curve:{type:"arc",rx:p.shift(),ry:p.shift(),xAxisRotation:p.shift(),largeArcFlag:p.shift(),sweepFlag:p.shift()},x:(u?y.x:0)+p.shift(),y:(u?y.y:0)+p.shift()});var g=!0,v=!1,x=void 0;try{for(var O,k=C[Symbol.iterator]();!(g=(O=k.next()).done);g=!0){var M=O.value;0===i[i.length-1].curve[M]&&delete i[i.length-1].curve[M]}}catch(t){v=!0,x=t}finally{try{!g&&k.return&&k.return()}finally{if(v)throw x}}break;case"C":i.push({curve:{type:"cubic",x1:(u?y.x:0)+p.shift(),y1:(u?y.y:0)+p.shift(),x2:(u?y.x:0)+p.shift(),y2:(u?y.y:0)+p.shift()},x:(u?y.x:0)+p.shift(),y:(u?y.y:0)+p.shift()});break;case"S":var E=(u?y.x:0)+p.shift(),A=(u?y.y:0)+p.shift(),S=(u?y.x:0)+p.shift(),N=(u?y.y:0)+p.shift(),R={},F=void 0,H=void 0;y.curve&&"cubic"===y.curve.type?(R.x=Math.abs(y.x-y.curve.x2),R.y=Math.abs(y.y-y.curve.y2),F=y.x<y.curve.x2?y.x-R.x:y.x+R.x,H=y.y<y.curve.y2?y.y-R.y:y.y+R.y):(R.x=Math.abs(S-E),R.y=Math.abs(N-A),F=y.x,H=y.y),i.push({curve:{type:"cubic",x1:F,y1:H,x2:E,y2:A},x:S,y:N});break;case"Q":i.push({curve:{type:"quadratic",x1:(u?y.x:0)+p.shift(),y1:(u?y.y:0)+p.shift()},x:(u?y.x:0)+p.shift(),y:(u?y.y:0)+p.shift()});break;case"T":var L=(u?y.x:0)+p.shift(),D=(u?y.y:0)+p.shift(),I=void 0,U=void 0;if(y.curve&&"quadratic"===y.curve.type){var W={x:Math.abs(y.x-y.curve.x1),y:Math.abs(y.y-y.curve.y1)};I=y.x<y.curve.x1?y.x-W.x:y.x+W.x,U=y.y<y.curve.y1?y.y-W.y:y.y+W.y}else I=y.x,U=y.y;i.push({curve:{type:"quadratic",x1:I,y1:U},x:L,y:D})}}else{var P=i[i.length-1]||{x:0,y:0};P.x===n.x&&P.y===n.y||i.push({x:n.x,y:n.y})}}return i},M=function(t){var e=t.points;return A({closed:!0,points:e})},E=function(t){var e=t.points;return A({closed:!1,points:e})},A=function(t){var e=t.closed,s=t.points.split(/[\s,]+/).map((function(t){return parseFloat(t)})).reduce((function(t,e,s){return s%2==0?t.push({x:e}):t[(s-1)/2].y=e,t}),[]);return e&&s.push(m({},s[0])),s[0].moveTo=!0,s},S=function(t){var e=t.height,s=t.rx,r=t.ry,i=t.width,n=t.x,o=t.y;return s||r?R({height:e,rx:s||r,ry:r||s,width:i,x:n,y:o}):N({height:e,width:i,x:n,y:o})},N=function(t){var e=t.height,s=t.width,r=t.x,i=t.y;return[{x:r,y:i,moveTo:!0},{x:r+s,y:i},{x:r+s,y:i+e},{x:r,y:i+e},{x:r,y:i}]},R=function(t){var e=t.height,s=t.rx,r=t.ry,i=t.width,n=t.x,o=t.y,a={type:"arc",rx:s,ry:r,sweepFlag:1};return[{x:n+s,y:o,moveTo:!0},{x:n+i-s,y:o},{x:n+i,y:o+r,curve:a},{x:n+i,y:o+e-r},{x:n+i-s,y:o+e,curve:a},{x:n+s,y:o+e},{x:n,y:o+e-r,curve:a},{x:n,y:o+r},{x:n+s,y:o,curve:a}]},F=function(t){return t.shapes.map((function(t){return f(t)}))},H=f,L=function(t){var e="",s=0,r=void 0,i=!0,n=!1,o=void 0;try{for(var a,h=t[Symbol.iterator]();!(i=(a=h.next()).done);i=!0){var l=a.value,c=l.curve,u=void 0!==c&&c,p=l.moveTo,_=l.x,d=l.y,y=0===s||p,m=s===t.length-1||t[s+1].moveTo,f=0===s?null:t[s-1];if(y)r=l,m||(e+="M"+_+","+d);else if(u){switch(u.type){case"arc":var g=l.curve,v=g.largeArcFlag,x=void 0===v?0:v,b=g.rx,w=g.ry,O=g.sweepFlag,T=void 0===O?0:O,C=g.xAxisRotation;e+="A"+b+","+w+","+(void 0===C?0:C)+","+x+","+T+","+_+","+d;break;case"cubic":var k=l.curve;e+="C"+k.x1+","+k.y1+","+k.x2+","+k.y2+","+_+","+d;break;case"quadratic":var M=l.curve;e+="Q"+M.x1+","+M.y1+","+_+","+d}m&&_===r.x&&d===r.y&&(e+="Z")}else m&&_===r.x&&d===r.y?e+="Z":_!==f.x&&d!==f.y?e+="L"+_+","+d:_!==f.x?e+="H"+_:d!==f.y&&(e+="V"+d);s++}}catch(t){n=!0,o=t}finally{try{!i&&h.return&&h.return()}finally{if(n)throw o}}return e},D=function(t){var e=Array.isArray(t),s=e?Array.isArray(t[0]):"g"===t.type,r=e?t:s?t.shapes.map((function(t){return H(t)})):H(t);return s?r.map((function(t){return L(t)})):L(r)},I=("function"==typeof Symbol&&Symbol.iterator,s(0));class U{constructor(t,e){this.p5=t,this.settings=Object.assign({},r,e),this.paused=!1,this.showWalkers=this.settings.ShowWalkers,this.showClusters=this.settings.ShowClusters,this.showShapes=this.settings.ShowShapes,this.useFrame=this.settings.UseFrame,this.renderMode=this.settings.RenderMode,this.numWalkers=0,this.customMovementFunction=void 0,this.edgeMargin=this.settings.EdgeMargin,this.edges={},this.frame={},"number"==typeof this.settings.FrameSize?(this.frame.left=window.innerWidth/2-this.settings.FrameSize/2,this.frame.right=window.innerWidth/2+this.settings.FrameSize/2,this.frame.top=window.innerHeight/2-this.settings.FrameSize/2,this.frame.bottom=window.innerHeight/2+this.settings.FrameSize/2):"object"==typeof this.settings.FrameSize&&(this.frame.left=window.innerWidth/2-this.settings.FrameSize[0]/2,this.frame.right=window.innerWidth/2+this.settings.FrameSize[0]/2,this.frame.top=window.innerHeight/2-this.settings.FrameSize[1]/2,this.frame.bottom=window.innerHeight/2+this.settings.FrameSize[1]/2),this.resetEdges(),this.maxDistance=this.p5.dist(this.edges.left,this.edges.top,window.innerWidth/2,window.innerHeight/2),this.system=new y,this.bodies=[],this.shapes=[],this.lines=[]}iterate(){this.paused||(this.settings.ReplenishWalkers&&this.numWalkers<this.settings.MaxWalkers&&this.createDefaultWalkers(this.settings.MaxWalkers-this.numWalkers,this.settings.ReplenishmentSource),this.moveWalkers(),this.system.update(),this.handleCollisions(),this.pruneWalkers())}draw(){if(this.settings.UseColors?this.p5.background(this.getColorStringFromObject(this.settings.BackgroundColor)):this.p5.background(255),this.showShapes)for(let t of this.shapes){this.settings.UseColors?(this.p5.fill(this.getColorStringFromObject(this.settings.ShapeColor)),this.p5.stroke(this.getColorStringFromObject(this.settings.ShapeColor))):(this.p5.noFill(),this.p5.stroke(100)),this.p5.beginShape();for(let e=0;e<t._coords.length;e+=2)this.p5.vertex(t._coords[e],t._coords[e+1]);this.p5.endShape()}if("Lines"==this.renderMode){if(this.settings.UseColors?this.p5.stroke(this.getColorStringFromObject(this.settings.LineColor)):this.p5.stroke(75),this.lines.length>0)for(let t of this.lines)this.p5.line(t.p1.x,t.p1.y,t.p2.x,t.p2.y)}else for(let t of this.bodies)if(t._point)this.p5.noFill(),t.stuck&&this.showClusters?(this.p5.noStroke(),this.settings.UseColors?this.p5.fill(this.getColorStringFromObject(this.settings.ClusterColor)):this.p5.fill(200),this.p5.ellipse(t.x,t.y,5)):!t.stuck&&this.showWalkers?this.settings.UseColors?this.p5.stroke(this.getColorStringFromObject(this.settings.WalkerColor)):this.p5.stroke(0):this.p5.noStroke(),this.p5.point(t.x,t.y);else if(t._circle)this.settings.UseStroke?this.settings.UseColors?this.p5.stroke(this.getColorStringFromObject(this.settings.BackgroundColor)):this.p5.stroke(255):this.p5.noStroke(),t.stuck&&this.showClusters?this.settings.UseColors?this.p5.fill(this.getColorStringFromObject(this.settings.ClusterColor)):this.p5.fill(120):!t.stuck&&this.showWalkers?this.settings.UseColors?this.p5.fill(this.getColorStringFromObject(this.settings.WalkerColor)):this.p5.fill(230):this.p5.noFill(),this.p5.ellipse(t.x,t.y,2*t.radius);else if(t._polygon){this.settings.UseStroke?this.settings.UseColors?this.p5.stroke(this.getColorStringFromObject(this.settings.BackgroundColor)):this.p5.stroke(255):this.p5.noStroke(),t.stuck&&this.showClusters?this.settings.UseColors?this.p5.fill(this.getColorStringFromObject(this.settings.ClusterColor)):this.p5.fill(120):!t.stuck&&this.showWalkers?this.settings.UseColors?this.p5.fill(this.getColorStringFromObject(this.settings.WalkerColor)):this.p5.fill(230):this.p5.noFill(),this.p5.beginShape();for(let e=0;e<t._coords.length-1;e+=2)this.p5.vertex(t._coords[e],t._coords[e+1]);this.p5.endShape()}this.useFrame&&this.drawFrame()}drawFrame(){this.p5.noFill(),this.settings.UseColors?this.p5.stroke(this.getColorStringFromObject(this.settings.FrameColor)):this.p5.stroke(0),"number"==typeof this.settings.FrameSize?this.p5.rect(window.innerWidth/2-this.settings.FrameSize/2-1,window.innerHeight/2-this.settings.FrameSize/2-1,this.settings.FrameSize+2,this.settings.FrameSize+2):"object"==typeof this.settings.FrameSize&&this.p5.rect(window.innerWidth/2-this.settings.FrameSize[0]/2-1,window.innerHeight/2-this.settings.FrameSize[1]/2-1,this.settings.FrameSize[0]+2,this.settings.FrameSize[1]+2)}resetEdges(){this.edges.left=this.useFrame?this.frame.left:0,this.edges.right=this.useFrame?this.frame.right:window.innerWidth,this.edges.top=this.useFrame?this.frame.top:0,this.edges.bottom=this.useFrame?this.frame.bottom:window.innerHeight}moveWalkers(){if(this.bodies.length>0)for(let t of this.bodies)if(!t.stuck){let e,s=this.p5.random(-1,1),r=this.p5.random(-1,1);if(this.settings.UsePerWalkerBias&&t.hasOwnProperty("BiasTowards"))e=this.getDeltasTowards(t.x,t.y,t.BiasTowards.x,t.BiasTowards.y),s+=e.x,r+=e.y;else switch(this.settings.BiasTowards){case"Top":r-=this.settings.BiasForce;break;case"Bottom":r+=this.settings.BiasForce;break;case"Left":s-=this.settings.BiasForce;break;case"Right":s+=this.settings.BiasForce;break;case"Center":e=this.getDeltasTowards(t.x,t.y,window.innerWidth/2,window.innerHeight/2),s+=e.x,r+=e.y;break;case"Edges":e=this.getDeltasTowards(t.x,t.y,window.innerWidth/2,window.innerHeight/2),s-=e.x,r-=e.y;break;case"Equator":t.y<window.innerHeight/2?r+=this.settings.BiasForce:r-=this.settings.BiasForce;break;case"Meridian":t.x<window.innerWidth/2?s+=this.settings.BiasForce:s-=this.settings.BiasForce}if(null!=typeof this.customMovementFunction&&this.customMovementFunction instanceof Function){let e=this.customMovementFunction(t);s+=e.dx,r+=e.dy}t._point&&(s=Math.round(s),r=Math.round(r)),t.x+=s,t.y+=r,t.age++}}getDeltasTowards(t,e,s,r){let i=Math.atan2(r-e,s-t);return{x:Math.cos(i)*this.settings.BiasForce,y:Math.sin(i)*this.settings.BiasForce}}handleCollisions(){for(let t of this.shapes){const e=t.potentials();for(let s of e)t.collides(s)&&(s.stuck=!0,this.numWalkers--)}for(let t of this.bodies){if(t.stuck)continue;const e=t.potentials();for(let s of e)t._point?s.stuck&&(t.stuck=!0,this.numWalkers--):s.stuck&&t.collides(s)&&(t.stuck=!0,this.numWalkers--,this.settings.CaptureLines&&this.lines.push({p1:{x:t.x,y:t.y},p2:{x:s.x,y:s.y}}))}}pruneWalkers(){if(this.settings.PruneOldWalkers||this.settings.PruneDistantWalkers)for(let[t,e]of this.bodies.entries())!e.stuck&&(this.settings.PruneOldWalkers&&e.age>this.settings.MaxAge||this.settings.PruneDistantWalkers&&this.p5.dist(e.x,e.y,e.originalX,e.originalY)>this.settings.MaxWanderDistance)&&(e.remove(),this.bodies.splice(t,1),this.numWalkers--)}createParticle(t){if(void 0===t||"object"!=typeof t)return;let e;if(t.hasOwnProperty("type"))switch(t.type){case"Point":e=this.system.createPoint(Math.round(t.x),Math.round(t.y)),e._point=!0;break;case"Circle":default:e=this.system.createCircle(t.x,t.y,t.diameter/2),e._circle=!0;break;case"Polygon":e=this.system.createPolygon(t.x,t.y,t.polygon,t.hasOwnProperty("rotation")?this.p5.radians(t.rotation):0),e._polygon=!0}else{const s=t.hasOwnProperty("diameter")?t.diameter:this.settings.CircleDiameter;e=this.system.createCircle(t.x,t.y,s/2),e._circle=!0}e.stuck=!!t.hasOwnProperty("stuck")&&t.stuck,e.age=0,t.hasOwnProperty("BiasTowards")&&(e.BiasTowards=t.BiasTowards),e.originalX=e.x,e.originalY=e.y,this.bodies.push(e)}createWalker(t){this.createParticle(t),this.numWalkers++}createDefaultWalkers(t=this.settings.MaxWalkers,e=this.settings.WalkerSource){for(let s=0;s<t;s++){let t={};switch(e){case"Edges":switch(Math.round(this.p5.random(1,4))){case 1:t.x=this.p5.random(this.edges.left+this.edgeMargin,this.edges.right-this.edgeMargin),t.y=this.p5.random(this.edges.top,this.edges.top+this.edgeMargin);break;case 3:t.x=this.p5.random(this.edges.left+this.edgeMargin,this.edges.right-this.edgeMargin),t.y=this.p5.random(this.edges.bottom-this.edgeMargin,this.edges.bottom);break;case 4:t.x=this.p5.random(this.edges.left,this.edges.left+this.edgeMargin),t.y=this.p5.random(this.edges.top,this.edges.bottom);break;case 2:t.x=this.p5.random(this.edges.right-this.edgeMargin,this.edges.right),t.y=this.p5.random(this.edges.top,this.edges.bottom)}break;case"Circle":let e;switch(typeof this.settings.FrameSize){case"number":e=this.settings.FrameSize/2;break;case"object":e=this.settings.FrameSize[0]>this.settings.FrameSize[1]?this.settings.FrameSize[1]/2:this.settings.FrameSize[0]/2}let s=this.p5.random(5,e),r=this.p5.random(360),i=this.settings.hasOwnProperty("CircleCenter")?this.settings.CircleCenter:{x:window.innerWidth/2,y:window.innerHeight/2};t.x=i.x+s*Math.cos(r*Math.PI/180),t.y=i.y+s*Math.sin(r*Math.PI/180);break;case"Random":t.x=this.p5.random(this.edges.left,this.edges.right),t.y=this.p5.random(this.edges.top,this.edges.bottom);break;case"Center":t.x=window.innerWidth/2,t.y=window.innerHeight/2;break;case"Offscreen":if(t.x=this.p5.random(this.edges.left-200,this.edges.right+200),t.y=this.p5.random(this.edges.top-200,this.edges.bottom+200),t.x>this.edges.left&&t.x<this.edges.right&&t.y>this.edges.top&&t.y<this.edges.bottom)continue}if(this.settings.VaryDiameterByDistance){let e=this.p5.dist(t.x,t.y,window.innerWidth/2,window.innerHeight/2);t.diameter=this.p5.map(e,0,this.maxDistance,this.settings.CircleDiameterRange[0],this.settings.CircleDiameterRange[1])}else this.settings.VaryDiameterRandomly&&(t.diameter=this.p5.random(this.settings.CircleDiameterRange[0],this.settings.CircleDiameterRange[1]));this.createWalker(t)}}createDefaultClusters(t=this.settings.InitialClusterType){let e=[];switch(t){case"Point":e.push({x:window.innerWidth/2,y:window.innerHeight/2,diameter:this.settings.CircleDiameter});break;case"Ring":let t=100,s=20;for(let r=0;r<s;r++)e.push({x:window.innerWidth/2+t*Math.cos(360/s*r*Math.PI/180),y:window.innerHeight/2+t*Math.sin(360/s*r*Math.PI/180),diameter:this.settings.CircleDiameter});break;case"Random":for(let t=0;t<100;t++)e.push({x:this.p5.random(this.edges.left,this.edges.right),y:this.p5.random(this.edges.top,this.edges.bottom),diameter:this.settings.CircleDiameter});break;case"Wall":switch(this.settings.BiasTowards){case"Top":e=this.createHorizontalClusterWall(this.edges.top);break;case"Bottom":e=this.createHorizontalClusterWall(this.edges.bottom);break;case"Left":e=this.createVerticalClusterWall(this.edges.left);break;case"Right":e=this.createVerticalClusterWall(this.edges.right);break;case"Edges":e=e.concat(this.createHorizontalClusterWall(this.edges.top)),e=e.concat(this.createHorizontalClusterWall(this.edges.bottom)),e=e.concat(this.createVerticalClusterWall(this.edges.left)),e=e.concat(this.createVerticalClusterWall(this.edges.right));break;case"Equator":e=e.concat(this.createHorizontalClusterWall(window.innerHeight/2));break;case"Meridian":e=e.concat(this.createVerticalClusterWall(window.innerWidth/2))}}this.createClusterFromParams(e)}createHorizontalClusterWall(t){let e=[],s=this.useFrame?this.edges.right-this.edges.left:window.innerWidth;for(let r=0;r<=s/this.settings.CircleDiameter;r++)e.push({x:this.edges.left+r*this.settings.CircleDiameter,y:t,diameter:this.settings.CircleDiameter});return e}createVerticalClusterWall(t){let e=[],s=this.useFrame?this.edges.bottom-this.edges.top:window.innerHeight;for(let r=0;r<=s/this.settings.CircleDiameter;r++)e.push({x:t,y:this.edges.top+r*this.settings.CircleDiameter,diameter:this.settings.CircleDiameter});return e}createClusterFromParams(t){if(t.length>0)for(let e of t)e.stuck=!0,this.createParticle(e)}createShapesFromPaths(t){if(t.hasOwnProperty("points")||0!=t.length)for(let e of t)if(e.solid){let t=this.system.createPolygon(e.x,e.y,e.points);t.solid=e.solid,t.closed=e.closed,this.shapes.push(t)}else for(let t=1;t<e.points.length;t++){let s=this.system.createPolygon(e.x,e.y,[[e.points[t-1][0],e.points[t-1][1]],[e.points[t][0],e.points[t][1]]]);s.solid=!1,s.closed=!1,this.shapes.push(s)}else console.error("Unable to create shapes. Paths must have an array of points [[x,y],...]")}removeAll(){for(let t of this.bodies)this.system.remove(t);for(let t of this.shapes)this.system.remove(t);this.bodies=[],this.shapes=[],this.lines=[],this.numWalkers=0}togglePause(){this.paused=!this.paused}toggleShowWalkers(){this.showWalkers=!this.showWalkers}toggleShowClusters(){this.showClusters=!this.showClusters}toggleShowShapes(){this.showShapes=!this.showShapes}toggleUseFrame(){this.useFrame=!this.useFrame,this.resetEdges()}toggleLineRenderingMode(){"Lines"!=this.renderMode?this.settings.CaptureLines?this.renderMode="Lines":console.error("Line rendering mode only allowed when CaptureLines is set."):this.renderMode="Shapes"}pause(){this.paused=!0}unpause(){this.paused=!1}getColorStringFromObject(t){return"hsla("+t.h+", "+t.s+"%, "+t.b+"%, "+t.a+")"}export(){let t=document.createElement("svg");switch(t.setAttribute("xmlns","http://www.w3.org/2000/svg"),t.setAttribute("xmlns:xlink","http://www.w3.org/1999/xlink"),t.setAttribute("width",window.innerWidth),t.setAttribute("height",window.innerHeight),t.setAttribute("viewBox","0 0 "+window.innerWidth+" "+window.innerHeight),this.renderMode){case"Shapes":default:for(let e of this.bodies)(e.stuck||this.showWalkers)&&(e._circle?t.appendChild(this.createCircleElFromBody(e)):t.appendChild(this.createPathElFromPoints(this.getPointsFromCoords(e._coords))));break;case"Lines":if(this.lines.length>0)for(let e of this.lines){let s=[];s.push({x:e.p1.x,y:e.p1.y}),s.push({x:e.p2.x,y:e.p2.y}),t.appendChild(this.createPathElFromPoints(s))}}if(this.shapes.length>0)for(let e of this.shapes)t.appendChild(this.createPathElFromPoints(this.getPointsFromCoords(e._coords)));let e=document.implementation.createDocumentType("svg","-//W3C//DTD SVG 1.1//EN","http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"),s=document.implementation.createDocument("http://www.w3.org/2000/svg","svg",e);s.replaceChild(t,s.documentElement);let r=(new XMLSerializer).serializeToString(s),i=new Blob([r.replace(/></g,">\n\r<")]);Object(I.saveAs)(i,"dla-"+Date.now()+".svg")}getPointsFromCoords(t){let e=[];for(let s=0;s<t.length-1;s+=2)e.push({x:t[s],y:t[s+1]});return e}createPathElFromPoints(t){let e="";for(let[s,r]of t.entries())e+=r.x+","+r.y,s<t.length-1&&(e+=" ");let s=D({type:"polyline",points:e}),r=document.createElement("path");return r.setAttribute("d",s),r.setAttribute("style","fill: none; stroke: black; stroke-width: 1"),r}createCircleElFromBody(t){let e=document.createElement("circle");return e.setAttribute("cx",t.x),e.setAttribute("cy",t.y),e.setAttribute("r",t.radius),e}}},function(t,e){var s;s=function(){return this}();try{s=s||new Function("return this")()}catch(t){"object"==typeof window&&(s=window)}t.exports=s},function(t,e,s){"use strict";s.d(e,"a",(function(){return k}));var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s])};function i(t,e){function s(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(s.prototype=e.prototype,new s)}function n(t,e){var s=t[0],r=t[1];return[s*Math.cos(e)-r*Math.sin(e),s*Math.sin(e)+r*Math.cos(e)]}function o(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var s=0;s<t.length;s++)if("number"!=typeof t[s])throw new Error("assertNumbers arguments["+s+"] is not a number. "+typeof t[s]+" == typeof "+t[s]);return!0}var a=Math.PI;function h(t,e,s){t.lArcFlag=0===t.lArcFlag?0:1,t.sweepFlag=0===t.sweepFlag?0:1;var r=t.rX,i=t.rY,o=t.x,h=t.y;r=Math.abs(t.rX),i=Math.abs(t.rY);var l=n([(e-o)/2,(s-h)/2],-t.xRot/180*a),c=l[0],u=l[1],p=Math.pow(c,2)/Math.pow(r,2)+Math.pow(u,2)/Math.pow(i,2);1<p&&(r*=Math.sqrt(p),i*=Math.sqrt(p)),t.rX=r,t.rY=i;var _=Math.pow(r,2)*Math.pow(u,2)+Math.pow(i,2)*Math.pow(c,2),d=(t.lArcFlag!==t.sweepFlag?1:-1)*Math.sqrt(Math.max(0,(Math.pow(r,2)*Math.pow(i,2)-_)/_)),y=r*u/i*d,m=-i*c/r*d,f=n([y,m],t.xRot/180*a);t.cX=f[0]+(e+o)/2,t.cY=f[1]+(s+h)/2,t.phi1=Math.atan2((u-m)/i,(c-y)/r),t.phi2=Math.atan2((-u-m)/i,(-c-y)/r),0===t.sweepFlag&&t.phi2>t.phi1&&(t.phi2-=2*a),1===t.sweepFlag&&t.phi2<t.phi1&&(t.phi2+=2*a),t.phi1*=180/a,t.phi2*=180/a}function l(t,e,s){o(t,e,s);var r=t*t+e*e-s*s;if(0>r)return[];if(0===r)return[[t*s/(t*t+e*e),e*s/(t*t+e*e)]];var i=Math.sqrt(r);return[[(t*s+e*i)/(t*t+e*e),(e*s-t*i)/(t*t+e*e)],[(t*s-e*i)/(t*t+e*e),(e*s+t*i)/(t*t+e*e)]]}var c,u=Math.PI/180;function p(t,e,s){return(1-s)*t+s*e}function _(t,e,s,r){return t+Math.cos(r/180*a)*e+Math.sin(r/180*a)*s}function d(t,e,s,r){var i=e-t,n=s-e,o=3*i+3*(r-s)-6*n,a=6*(n-i),h=3*i;return Math.abs(o)<1e-6?[-h/a]:function(t,e,s){void 0===s&&(s=1e-6);var r=t*t/4-e;if(r<-s)return[];if(r<=s)return[-t/2];var i=Math.sqrt(r);return[-t/2-i,-t/2+i]}(a/o,h/o,1e-6)}function y(t,e,s,r,i){var n=1-i;return t*(n*n*n)+e*(3*n*n*i)+s*(3*n*i*i)+r*(i*i*i)}!function(t){function e(){return i((function(t,e,s){return t.relative&&(void 0!==t.x1&&(t.x1+=e),void 0!==t.y1&&(t.y1+=s),void 0!==t.x2&&(t.x2+=e),void 0!==t.y2&&(t.y2+=s),void 0!==t.x&&(t.x+=e),void 0!==t.y&&(t.y+=s),t.relative=!1),t}))}function s(){var t=NaN,e=NaN,s=NaN,r=NaN;return i((function(i,n,o){return i.type&w.SMOOTH_CURVE_TO&&(i.type=w.CURVE_TO,t=isNaN(t)?n:t,e=isNaN(e)?o:e,i.x1=i.relative?n-t:2*n-t,i.y1=i.relative?o-e:2*o-e),i.type&w.CURVE_TO?(t=i.relative?n+i.x2:i.x2,e=i.relative?o+i.y2:i.y2):(t=NaN,e=NaN),i.type&w.SMOOTH_QUAD_TO&&(i.type=w.QUAD_TO,s=isNaN(s)?n:s,r=isNaN(r)?o:r,i.x1=i.relative?n-s:2*n-s,i.y1=i.relative?o-r:2*o-r),i.type&w.QUAD_TO?(s=i.relative?n+i.x1:i.x1,r=i.relative?o+i.y1:i.y1):(s=NaN,r=NaN),i}))}function r(){var t=NaN,e=NaN;return i((function(s,r,i){if(s.type&w.SMOOTH_QUAD_TO&&(s.type=w.QUAD_TO,t=isNaN(t)?r:t,e=isNaN(e)?i:e,s.x1=s.relative?r-t:2*r-t,s.y1=s.relative?i-e:2*i-e),s.type&w.QUAD_TO){t=s.relative?r+s.x1:s.x1,e=s.relative?i+s.y1:s.y1;var n=s.x1,o=s.y1;s.type=w.CURVE_TO,s.x1=((s.relative?0:r)+2*n)/3,s.y1=((s.relative?0:i)+2*o)/3,s.x2=(s.x+2*n)/3,s.y2=(s.y+2*o)/3}else t=NaN,e=NaN;return s}))}function i(t){var e=0,s=0,r=NaN,i=NaN;return function(n){if(isNaN(r)&&!(n.type&w.MOVE_TO))throw new Error("path must start with moveto");var o=t(n,e,s,r,i);return n.type&w.CLOSE_PATH&&(e=r,s=i),void 0!==n.x&&(e=n.relative?e+n.x:n.x),void 0!==n.y&&(s=n.relative?s+n.y:n.y),n.type&w.MOVE_TO&&(r=e,i=s),o}}function a(t,e,s,r,n,a){return o(t,e,s,r,n,a),i((function(i,o,h,l){var c=i.x1,u=i.x2,p=i.relative&&!isNaN(l),_=void 0!==i.x?i.x:p?0:o,d=void 0!==i.y?i.y:p?0:h;function y(t){return t*t}i.type&w.HORIZ_LINE_TO&&0!==e&&(i.type=w.LINE_TO,i.y=i.relative?0:h),i.type&w.VERT_LINE_TO&&0!==s&&(i.type=w.LINE_TO,i.x=i.relative?0:o),void 0!==i.x&&(i.x=i.x*t+d*s+(p?0:n)),void 0!==i.y&&(i.y=_*e+i.y*r+(p?0:a)),void 0!==i.x1&&(i.x1=i.x1*t+i.y1*s+(p?0:n)),void 0!==i.y1&&(i.y1=c*e+i.y1*r+(p?0:a)),void 0!==i.x2&&(i.x2=i.x2*t+i.y2*s+(p?0:n)),void 0!==i.y2&&(i.y2=u*e+i.y2*r+(p?0:a));var m=t*r-e*s;if(void 0!==i.xRot&&(1!==t||0!==e||0!==s||1!==r))if(0===m)delete i.rX,delete i.rY,delete i.xRot,delete i.lArcFlag,delete i.sweepFlag,i.type=w.LINE_TO;else{var f=i.xRot*Math.PI/180,g=Math.sin(f),v=Math.cos(f),x=1/y(i.rX),b=1/y(i.rY),O=y(v)*x+y(g)*b,T=2*g*v*(x-b),C=y(g)*x+y(v)*b,k=O*r*r-T*e*r+C*e*e,M=T*(t*r+e*s)-2*(O*s*r+C*t*e),E=O*s*s-T*t*s+C*t*t,A=(Math.atan2(M,k-E)+Math.PI)%Math.PI/2,S=Math.sin(A),N=Math.cos(A);i.rX=Math.abs(m)/Math.sqrt(k*y(N)+M*S*N+E*y(S)),i.rY=Math.abs(m)/Math.sqrt(k*y(S)-M*S*N+E*y(N)),i.xRot=180*A/Math.PI}return void 0!==i.sweepFlag&&0>m&&(i.sweepFlag=+!i.sweepFlag),i}))}t.ROUND=function(t){function e(e){return Math.round(e*t)/t}return void 0===t&&(t=1e13),o(t),function(t){return void 0!==t.x1&&(t.x1=e(t.x1)),void 0!==t.y1&&(t.y1=e(t.y1)),void 0!==t.x2&&(t.x2=e(t.x2)),void 0!==t.y2&&(t.y2=e(t.y2)),void 0!==t.x&&(t.x=e(t.x)),void 0!==t.y&&(t.y=e(t.y)),t}},t.TO_ABS=e,t.TO_REL=function(){return i((function(t,e,s){return t.relative||(void 0!==t.x1&&(t.x1-=e),void 0!==t.y1&&(t.y1-=s),void 0!==t.x2&&(t.x2-=e),void 0!==t.y2&&(t.y2-=s),void 0!==t.x&&(t.x-=e),void 0!==t.y&&(t.y-=s),t.relative=!0),t}))},t.NORMALIZE_HVZ=function(t,e,s){return void 0===t&&(t=!0),void 0===e&&(e=!0),void 0===s&&(s=!0),i((function(r,i,n,o,a){if(isNaN(o)&&!(r.type&w.MOVE_TO))throw new Error("path must start with moveto");return e&&r.type&w.HORIZ_LINE_TO&&(r.type=w.LINE_TO,r.y=r.relative?0:n),s&&r.type&w.VERT_LINE_TO&&(r.type=w.LINE_TO,r.x=r.relative?0:i),t&&r.type&w.CLOSE_PATH&&(r.type=w.LINE_TO,r.x=r.relative?o-i:o,r.y=r.relative?a-n:a),r.type&w.ARC&&(0===r.rX||0===r.rY)&&(r.type=w.LINE_TO,delete r.rX,delete r.rY,delete r.xRot,delete r.lArcFlag,delete r.sweepFlag),r}))},t.NORMALIZE_ST=s,t.QT_TO_C=r,t.INFO=i,t.SANITIZE=function(t){void 0===t&&(t=0),o(t);var e=NaN,s=NaN,r=NaN,n=NaN;return i((function(i,o,a,h,l){var c=Math.abs,u=!1,p=0,_=0;if(i.type&w.SMOOTH_CURVE_TO&&(p=isNaN(e)?0:o-e,_=isNaN(s)?0:a-s),i.type&(w.CURVE_TO|w.SMOOTH_CURVE_TO)?(e=i.relative?o+i.x2:i.x2,s=i.relative?a+i.y2:i.y2):(e=NaN,s=NaN),i.type&w.SMOOTH_QUAD_TO?(r=isNaN(r)?o:2*o-r,n=isNaN(n)?a:2*a-n):i.type&w.QUAD_TO?(r=i.relative?o+i.x1:i.x1,n=i.relative?a+i.y1:i.y2):(r=NaN,n=NaN),i.type&w.LINE_COMMANDS||i.type&w.ARC&&(0===i.rX||0===i.rY||!i.lArcFlag)||i.type&w.CURVE_TO||i.type&w.SMOOTH_CURVE_TO||i.type&w.QUAD_TO||i.type&w.SMOOTH_QUAD_TO){var d=void 0===i.x?0:i.relative?i.x:i.x-o,y=void 0===i.y?0:i.relative?i.y:i.y-a;p=isNaN(r)?void 0===i.x1?p:i.relative?i.x:i.x1-o:r-o,_=isNaN(n)?void 0===i.y1?_:i.relative?i.y:i.y1-a:n-a;var m=void 0===i.x2?0:i.relative?i.x:i.x2-o,f=void 0===i.y2?0:i.relative?i.y:i.y2-a;c(d)<=t&&c(y)<=t&&c(p)<=t&&c(_)<=t&&c(m)<=t&&c(f)<=t&&(u=!0)}return i.type&w.CLOSE_PATH&&c(o-h)<=t&&c(a-l)<=t&&(u=!0),u?[]:i}))},t.MATRIX=a,t.ROTATE=function(t,e,s){void 0===e&&(e=0),void 0===s&&(s=0),o(t,e,s);var r=Math.sin(t),i=Math.cos(t);return a(i,r,-r,i,e-e*i+s*r,s-e*r-s*i)},t.TRANSLATE=function(t,e){return void 0===e&&(e=0),o(t,e),a(1,0,0,1,t,e)},t.SCALE=function(t,e){return void 0===e&&(e=t),o(t,e),a(t,0,0,e,0,0)},t.SKEW_X=function(t){return o(t),a(1,0,Math.atan(t),1,0,0)},t.SKEW_Y=function(t){return o(t),a(1,Math.atan(t),0,1,0,0)},t.X_AXIS_SYMMETRY=function(t){return void 0===t&&(t=0),o(t),a(-1,0,0,1,t,0)},t.Y_AXIS_SYMMETRY=function(t){return void 0===t&&(t=0),o(t),a(1,0,0,-1,0,t)},t.A_TO_C=function(){return i((function(t,e,s){return w.ARC===t.type?function(t,e,s){var r,i,o,a;t.cX||h(t,e,s);for(var l=Math.min(t.phi1,t.phi2),c=Math.max(t.phi1,t.phi2)-l,_=Math.ceil(c/90),d=new Array(_),y=e,m=s,f=0;f<_;f++){var g=p(t.phi1,t.phi2,f/_),v=p(t.phi1,t.phi2,(f+1)/_),x=v-g,b=4/3*Math.tan(x*u/4),O=[Math.cos(g*u)-b*Math.sin(g*u),Math.sin(g*u)+b*Math.cos(g*u)],T=O[0],C=O[1],k=[Math.cos(v*u),Math.sin(v*u)],M=k[0],E=k[1],A=[M+b*Math.sin(v*u),E-b*Math.cos(v*u)],S=A[0],N=A[1];d[f]={relative:t.relative,type:w.CURVE_TO};var R=function(e,s){var r=n([e*t.rX,s*t.rY],t.xRot),i=r[0],o=r[1];return[t.cX+i,t.cY+o]};r=R(T,C),d[f].x1=r[0],d[f].y1=r[1],i=R(S,N),d[f].x2=i[0],d[f].y2=i[1],o=R(M,E),d[f].x=o[0],d[f].y=o[1],t.relative&&(d[f].x1-=y,d[f].y1-=m,d[f].x2-=y,d[f].y2-=m,d[f].x-=y,d[f].y-=m),y=(a=[d[f].x,d[f].y])[0],m=a[1]}return d}(t,t.relative?0:e,t.relative?0:s):t}))},t.ANNOTATE_ARCS=function(){return i((function(t,e,s){return t.relative&&(e=0,s=0),w.ARC===t.type&&h(t,e,s),t}))},t.CLONE=function(){return function(t){var e={};for(var s in t)e[s]=t[s];return e}},t.CALCULATE_BOUNDS=function(){var t=e(),n=r(),o=s(),a=i((function(e,s,r){var i=o(n(t(function(t){var e={};for(var s in t)e[s]=t[s];return e}(e))));function c(t){t>a.maxX&&(a.maxX=t),t<a.minX&&(a.minX=t)}function u(t){t>a.maxY&&(a.maxY=t),t<a.minY&&(a.minY=t)}if(i.type&w.DRAWING_COMMANDS&&(c(s),u(r)),i.type&w.HORIZ_LINE_TO&&c(i.x),i.type&w.VERT_LINE_TO&&u(i.y),i.type&w.LINE_TO&&(c(i.x),u(i.y)),i.type&w.CURVE_TO){c(i.x),u(i.y);for(var p=0,m=d(s,i.x1,i.x2,i.x);p<m.length;p++)0<(F=m[p])&&1>F&&c(y(s,i.x1,i.x2,i.x,F));for(var f=0,g=d(r,i.y1,i.y2,i.y);f<g.length;f++)0<(F=g[f])&&1>F&&u(y(r,i.y1,i.y2,i.y,F))}if(i.type&w.ARC){c(i.x),u(i.y),h(i,s,r);for(var v=i.xRot/180*Math.PI,x=Math.cos(v)*i.rX,b=Math.sin(v)*i.rX,O=-Math.sin(v)*i.rY,T=Math.cos(v)*i.rY,C=i.phi1<i.phi2?[i.phi1,i.phi2]:-180>i.phi2?[i.phi2+360,i.phi1+360]:[i.phi2,i.phi1],k=C[0],M=C[1],E=function(t){var e=t[0],s=t[1],r=180*Math.atan2(s,e)/Math.PI;return r<k?r+360:r},A=0,S=l(O,-x,0).map(E);A<S.length;A++)(F=S[A])>k&&F<M&&c(_(i.cX,x,O,F));for(var N=0,R=l(T,-b,0).map(E);N<R.length;N++){var F;(F=R[N])>k&&F<M&&u(_(i.cY,b,T,F))}}return e}));return a.minX=1/0,a.maxX=-1/0,a.minY=1/0,a.maxY=-1/0,a}}(c||(c={}));var m,f,g=function(){function t(){}return t.prototype.round=function(t){return this.transform(c.ROUND(t))},t.prototype.toAbs=function(){return this.transform(c.TO_ABS())},t.prototype.toRel=function(){return this.transform(c.TO_REL())},t.prototype.normalizeHVZ=function(t,e,s){return this.transform(c.NORMALIZE_HVZ(t,e,s))},t.prototype.normalizeST=function(){return this.transform(c.NORMALIZE_ST())},t.prototype.qtToC=function(){return this.transform(c.QT_TO_C())},t.prototype.aToC=function(){return this.transform(c.A_TO_C())},t.prototype.sanitize=function(t){return this.transform(c.SANITIZE(t))},t.prototype.translate=function(t,e){return this.transform(c.TRANSLATE(t,e))},t.prototype.scale=function(t,e){return this.transform(c.SCALE(t,e))},t.prototype.rotate=function(t,e,s){return this.transform(c.ROTATE(t,e,s))},t.prototype.matrix=function(t,e,s,r,i,n){return this.transform(c.MATRIX(t,e,s,r,i,n))},t.prototype.skewX=function(t){return this.transform(c.SKEW_X(t))},t.prototype.skewY=function(t){return this.transform(c.SKEW_Y(t))},t.prototype.xSymmetry=function(t){return this.transform(c.X_AXIS_SYMMETRY(t))},t.prototype.ySymmetry=function(t){return this.transform(c.Y_AXIS_SYMMETRY(t))},t.prototype.annotateArcs=function(){return this.transform(c.ANNOTATE_ARCS())},t}(),v=function(t){return" "===t||"\t"===t||"\r"===t||"\n"===t},x=function(t){return"0".charCodeAt(0)<=t.charCodeAt(0)&&t.charCodeAt(0)<="9".charCodeAt(0)},b=function(t){function e(){var e=t.call(this)||this;return e.curNumber="",e.curCommandType=-1,e.curCommandRelative=!1,e.canParseCommandOrComma=!0,e.curNumberHasExp=!1,e.curNumberHasExpDigits=!1,e.curNumberHasDecimal=!1,e.curArgs=[],e}return i(e,t),e.prototype.finish=function(t){if(void 0===t&&(t=[]),this.parse(" ",t),0!==this.curArgs.length||!this.canParseCommandOrComma)throw new SyntaxError("Unterminated command at the path end.");return t},e.prototype.parse=function(t,e){var s=this;void 0===e&&(e=[]);for(var r=function(t){e.push(t),s.curArgs.length=0,s.canParseCommandOrComma=!0},i=0;i<t.length;i++){var n=t[i];if(x(n))this.curNumber+=n,this.curNumberHasExpDigits=this.curNumberHasExp;else if("e"!==n&&"E"!==n)if("-"!==n&&"+"!==n||!this.curNumberHasExp||this.curNumberHasExpDigits)if("."!==n||this.curNumberHasExp||this.curNumberHasDecimal){if(this.curNumber&&-1!==this.curCommandType){var o=Number(this.curNumber);if(isNaN(o))throw new SyntaxError("Invalid number ending at "+i);if(this.curCommandType===w.ARC)if(0===this.curArgs.length||1===this.curArgs.length){if(0>o)throw new SyntaxError('Expected positive number, got "'+o+'" at index "'+i+'"')}else if((3===this.curArgs.length||4===this.curArgs.length)&&"0"!==this.curNumber&&"1"!==this.curNumber)throw new SyntaxError('Expected a flag, got "'+this.curNumber+'" at index "'+i+'"');this.curArgs.push(o),this.curArgs.length===O[this.curCommandType]&&(w.HORIZ_LINE_TO===this.curCommandType?r({type:w.HORIZ_LINE_TO,relative:this.curCommandRelative,x:o}):w.VERT_LINE_TO===this.curCommandType?r({type:w.VERT_LINE_TO,relative:this.curCommandRelative,y:o}):this.curCommandType===w.MOVE_TO||this.curCommandType===w.LINE_TO||this.curCommandType===w.SMOOTH_QUAD_TO?(r({type:this.curCommandType,relative:this.curCommandRelative,x:this.curArgs[0],y:this.curArgs[1]}),w.MOVE_TO===this.curCommandType&&(this.curCommandType=w.LINE_TO)):this.curCommandType===w.CURVE_TO?r({type:w.CURVE_TO,relative:this.curCommandRelative,x1:this.curArgs[0],y1:this.curArgs[1],x2:this.curArgs[2],y2:this.curArgs[3],x:this.curArgs[4],y:this.curArgs[5]}):this.curCommandType===w.SMOOTH_CURVE_TO?r({type:w.SMOOTH_CURVE_TO,relative:this.curCommandRelative,x2:this.curArgs[0],y2:this.curArgs[1],x:this.curArgs[2],y:this.curArgs[3]}):this.curCommandType===w.QUAD_TO?r({type:w.QUAD_TO,relative:this.curCommandRelative,x1:this.curArgs[0],y1:this.curArgs[1],x:this.curArgs[2],y:this.curArgs[3]}):this.curCommandType===w.ARC&&r({type:w.ARC,relative:this.curCommandRelative,rX:this.curArgs[0],rY:this.curArgs[1],xRot:this.curArgs[2],lArcFlag:this.curArgs[3],sweepFlag:this.curArgs[4],x:this.curArgs[5],y:this.curArgs[6]})),this.curNumber="",this.curNumberHasExpDigits=!1,this.curNumberHasExp=!1,this.curNumberHasDecimal=!1,this.canParseCommandOrComma=!0}if(!v(n))if(","===n&&this.canParseCommandOrComma)this.canParseCommandOrComma=!1;else if("+"!==n&&"-"!==n&&"."!==n){if(0!==this.curArgs.length)throw new SyntaxError("Unterminated command at index "+i+".");if(!this.canParseCommandOrComma)throw new SyntaxError('Unexpected character "'+n+'" at index '+i+". Command cannot follow comma");if(this.canParseCommandOrComma=!1,"z"!==n&&"Z"!==n)if("h"===n||"H"===n)this.curCommandType=w.HORIZ_LINE_TO,this.curCommandRelative="h"===n;else if("v"===n||"V"===n)this.curCommandType=w.VERT_LINE_TO,this.curCommandRelative="v"===n;else if("m"===n||"M"===n)this.curCommandType=w.MOVE_TO,this.curCommandRelative="m"===n;else if("l"===n||"L"===n)this.curCommandType=w.LINE_TO,this.curCommandRelative="l"===n;else if("c"===n||"C"===n)this.curCommandType=w.CURVE_TO,this.curCommandRelative="c"===n;else if("s"===n||"S"===n)this.curCommandType=w.SMOOTH_CURVE_TO,this.curCommandRelative="s"===n;else if("q"===n||"Q"===n)this.curCommandType=w.QUAD_TO,this.curCommandRelative="q"===n;else if("t"===n||"T"===n)this.curCommandType=w.SMOOTH_QUAD_TO,this.curCommandRelative="t"===n;else{if("a"!==n&&"A"!==n)throw new SyntaxError('Unexpected character "'+n+'" at index '+i+".");this.curCommandType=w.ARC,this.curCommandRelative="a"===n}else e.push({type:w.CLOSE_PATH}),this.canParseCommandOrComma=!0,this.curCommandType=-1}else this.curNumber=n,this.curNumberHasDecimal="."===n}else this.curNumber+=n,this.curNumberHasDecimal=!0;else this.curNumber+=n;else this.curNumber+=n,this.curNumberHasExp=!0}return e},e.prototype.transform=function(t){return Object.create(this,{parse:{value:function(e,s){void 0===s&&(s=[]);for(var r=0,i=Object.getPrototypeOf(this).parse.call(this,e);r<i.length;r++){var n=i[r],o=t(n);Array.isArray(o)?s.push.apply(s,o):s.push(o)}return s}}})},e}(g),w=function(t){function e(s){var r=t.call(this)||this;return r.commands="string"==typeof s?e.parse(s):s,r}return i(e,t),e.prototype.encode=function(){return e.encode(this.commands)},e.prototype.getBounds=function(){var t=c.CALCULATE_BOUNDS();return this.transform(t),t},e.prototype.transform=function(t){for(var e=[],s=0,r=this.commands;s<r.length;s++){var i=t(r[s]);Array.isArray(i)?e.push.apply(e,i):e.push(i)}return this.commands=e,this},e.encode=function(t){return T(t)},e.parse=function(t){var e=new b,s=[];return e.parse(t,s),e.finish(s),s},e.CLOSE_PATH=1,e.MOVE_TO=2,e.HORIZ_LINE_TO=4,e.VERT_LINE_TO=8,e.LINE_TO=16,e.CURVE_TO=32,e.SMOOTH_CURVE_TO=64,e.QUAD_TO=128,e.SMOOTH_QUAD_TO=256,e.ARC=512,e.LINE_COMMANDS=e.LINE_TO|e.HORIZ_LINE_TO|e.VERT_LINE_TO,e.DRAWING_COMMANDS=e.HORIZ_LINE_TO|e.VERT_LINE_TO|e.LINE_TO|e.CURVE_TO|e.SMOOTH_CURVE_TO|e.QUAD_TO|e.SMOOTH_QUAD_TO|e.ARC,e}(g),O=((m={})[w.MOVE_TO]=2,m[w.LINE_TO]=2,m[w.HORIZ_LINE_TO]=1,m[w.VERT_LINE_TO]=1,m[w.CLOSE_PATH]=0,m[w.QUAD_TO]=4,m[w.SMOOTH_QUAD_TO]=2,m[w.CURVE_TO]=6,m[w.SMOOTH_CURVE_TO]=4,m[w.ARC]=7,m);function T(t){var e="";Array.isArray(t)||(t=[t]);for(var s=0;s<t.length;s++){var r=t[s];if(r.type===w.CLOSE_PATH)e+="z";else if(r.type===w.HORIZ_LINE_TO)e+=(r.relative?"h":"H")+r.x;else if(r.type===w.VERT_LINE_TO)e+=(r.relative?"v":"V")+r.y;else if(r.type===w.MOVE_TO)e+=(r.relative?"m":"M")+r.x+" "+r.y;else if(r.type===w.LINE_TO)e+=(r.relative?"l":"L")+r.x+" "+r.y;else if(r.type===w.CURVE_TO)e+=(r.relative?"c":"C")+r.x1+" "+r.y1+" "+r.x2+" "+r.y2+" "+r.x+" "+r.y;else if(r.type===w.SMOOTH_CURVE_TO)e+=(r.relative?"s":"S")+r.x2+" "+r.y2+" "+r.x+" "+r.y;else if(r.type===w.QUAD_TO)e+=(r.relative?"q":"Q")+r.x1+" "+r.y1+" "+r.x+" "+r.y;else if(r.type===w.SMOOTH_QUAD_TO)e+=(r.relative?"t":"T")+r.x+" "+r.y;else{if(r.type!==w.ARC)throw new Error('Unexpected command type "'+r.type+'" at index '+s+".");e+=(r.relative?"a":"A")+r.rX+" "+r.rY+" "+r.xRot+" "+ +r.lArcFlag+" "+ +r.sweepFlag+" "+r.x+" "+r.y}}return e}var C=function(t){function e(s){var r=t.call(this)||this;return r.commands="string"==typeof s?e.parse(s):s,r}return i(e,t),e.prototype.encode=function(){return e.encode(this.commands)},e.prototype.getBounds=function(){var t=c.CALCULATE_BOUNDS();return this.transform(t),t},e.prototype.transform=function(t){for(var e=[],s=0,r=this.commands;s<r.length;s++){var i=t(r[s]);Array.isArray(i)?e.push.apply(e,i):e.push(i)}return this.commands=e,this},e.encode=function(t){return T(t)},e.parse=function(t){var e=new b,s=[];return e.parse(t,s),e.finish(s),s},e.CLOSE_PATH=1,e.MOVE_TO=2,e.HORIZ_LINE_TO=4,e.VERT_LINE_TO=8,e.LINE_TO=16,e.CURVE_TO=32,e.SMOOTH_CURVE_TO=64,e.QUAD_TO=128,e.SMOOTH_QUAD_TO=256,e.ARC=512,e.LINE_COMMANDS=e.LINE_TO|e.HORIZ_LINE_TO|e.VERT_LINE_TO,e.DRAWING_COMMANDS=e.HORIZ_LINE_TO|e.VERT_LINE_TO|e.LINE_TO|e.CURVE_TO|e.SMOOTH_CURVE_TO|e.QUAD_TO|e.SMOOTH_QUAD_TO|e.ARC,e}(g);(f={})[C.MOVE_TO]=2,f[C.LINE_TO]=2,f[C.HORIZ_LINE_TO]=1,f[C.VERT_LINE_TO]=1,f[C.CLOSE_PATH]=0,f[C.QUAD_TO]=4,f[C.SMOOTH_QUAD_TO]=2,f[C.CURVE_TO]=6,f[C.SMOOTH_CURVE_TO]=4,f[C.ARC]=7;class k{constructor(){}static loadFromFileContents(t){let e=(new DOMParser).parseFromString(t,"image/svg+xml");return this.load(e)}static load(t){let e=t.querySelectorAll("path"),s={},r=[];s.points=[];for(let t of e){let e=new C(t.getAttribute("d")),i={x:0,y:0};for(let[t,n]of e.commands.entries()){switch(n.type){case C.MOVE_TO:case C.LINE_TO:s.points.push([n.x,n.y]);break;case C.HORIZ_LINE_TO:s.points.push([n.x,i.y]);break;case C.VERT_LINE_TO:s.points.push([i.x,n.y]);break;case C.CLOSE_PATH:s.closed=!0,r.push(s),s={},s.points=[]}if(t==e.commands.length-1&&n.type!=C.CLOSE_PATH){let t=s.points[0],e=s.points[s.points.length-1];Math.hypot(e.x-t.x,e.y-t.y)<.1?s.closed=!0:s.closed=!1,r.push(s),s={},s.points=[]}n.hasOwnProperty("x")&&(i.x=n.x),n.hasOwnProperty("y")&&(i.y=n.y)}}for(let t of r){t.x=t.points[0][0],t.y=t.points[0][1],t.points.push([t.x,t.y]);for(let e of t.points)e[0]-=t.x,e[1]-=t.y}return r}}},,,function(t,e){t.exports='<svg xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" viewBox="0 0 900 900" version="1.1" id="svg8" sodipodi:docname="dla.svg" inkscape:version="0.92.3 (2405546, 2018-03-11)"><path style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 360.0972,430.72214 356.96812,456.71 347.58087,479.86521 333.41765,498.96906 315.96066,513.06641 300.90813,520.44447 284.47221,525.18747 265.76359,527.75662 243.89295,528.61302 H 209.30835 174.72376 V 430.52451 332.43599 H 210.29649 245.86922 L 268.20099,333.45707 287.23898,336.52027 303.24671,341.32917 316.48767,347.85084 334.60341,362.40932 348.37137,381.31556 357.16575,404.14142 360.0972,430.72214" id="path820"></path><path style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 307.79212,430.32687 306.01348,412.37583 300.67756,397.25741 291.61969,384.93871 278.41167,375.65026 270.53956,372.4553 262.46982,370.512 252.35794,369.42506 238.09592,369.06274 H 231.706 225.31609 V 430.45864 491.8545 H 231.706 238.09592 L 253.74133,491.45923 264.57783,490.27351 272.91108,487.90199 281.04669,484.21298 293.03602,474.99044 301.33632,463.13284 306.17817,448.27792 307.79212,430.32687" id="path819"></path><path inkscape:connector-curvature="0" id="path821" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 517.15385,528.61302 H 375.65347 V 332.43599 H 426.24576 V 490.66878 H 517.15385 V 528.61302" sodipodi:nodetypes="ccccccc"></path><path style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 731.69898,528.61302 H 679.39389 L 665.82358,488.95599 H 593.09708 L 579.52676,528.61302 H 528.53917 L 601.00213,332.43599 H 659.23601 L 731.69898,528.61302" id="path824"></path><path style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 653.57075,452.988 629.46033,382.63306 605.34994,452.988 H 653.57075" id="path823"></path></svg>'},function(t,e){t.exports='<svg xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" id="svg832" version="1.1" viewBox="0 0 900 900" sodipodi:docname="polygons.svg" inkscape:version="0.92.3 (2405546, 2018-03-11)"><path id="path1377" style="opacity:1;vector-effect:none;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" d="M 637.95718,464.22103 584.33571,382.14098 530.71423,300.06092 486.44216,387.53824 465.30384,429.30364 437.48882,430.45616 403.17529,384.77031 427.64471,365.18499 414.35188,278.03524 332.23363,245.97365 263.40556,301.05921 276.69889,388.20739 358.81822,420.27107 362.71416,417.15172 354.63937,446.02414 264.54156,476.88822 343.8441,529.62956 345.35592,624.85561 420.02002,565.73219 511.05425,593.72124 477.89678,504.44013 500.8419,471.77963 540.06207,469.61781 637.95718,464.22103" inkscape:connector-curvature="0" sodipodi:nodetypes="cccccccccccccccccccccccc"></path></svg>'},function(t,e){t.exports='<svg xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" id="svg832" version="1.1" viewBox="0 0 900 900" sodipodi:docname="superformula.svg" inkscape:version="0.92.2 (5c3e80d, 2017-08-06)"><path style="font-family:none;mix-blend-mode:normal;fill:none;fill-rule:nonzero;stroke:#000000;stroke-width:0.89864457;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:10;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:0.6" d="M 753.92226,448.18905 742.70566,451.3979 691.38526,453.71143 664.03896,455.75759 646.05236,457.65411 632.84626,459.44649 622.50646,461.15986 614.06026,462.81008 606.94966,464.40795 600.82626,465.96128 595.45916,467.47598 590.68786,468.95659 586.39636,470.40679 582.49846,471.82952 578.92856,473.22726 575.63536,474.60205 572.57846,475.95565 569.72496,477.28959 567.04836,478.60514 564.52646,479.90345 562.14106,481.18553 559.87646,482.45226 557.71956,483.70443 555.65896,484.94275 553.68506,486.16786 551.78926,487.38034 549.96426,488.5807 548.20346,489.76942 546.50116,490.94692 544.85246,492.11361 543.25256,493.26984 541.69756,494.41595 540.18386,495.55226 538.70826,496.67904 537.26766,497.79656 535.85936,498.90505 534.48106,500.00476 533.13066,501.09589 531.80576,502.17863 530.50506,503.25317 529.22636,504.31968 527.96846,505.37833 526.72976,506.42927 525.50886,507.47263 524.30476,508.50855 523.11616,509.53716 521.94216,510.55857 520.78156,511.57289 519.63366,512.58023 518.49756,513.5807 517.37246,514.57436 516.25766,515.56133 515.15246,516.54167 514.05606,517.51548 512.96806,518.48283 511.88776,519.44377 510.81486,520.39839 509.74856,521.34676 508.68846,522.28893 507.63426,523.22495 506.58546,524.15488 505.54166,525.07877 504.50236,525.99667 503.46756,526.90863 502.43646,527.8147 501.40906,528.71492 500.38506,529.60933 499.36406,530.49797 498.34586,531.38087 497.33006,532.25807 496.31656,533.12961 495.30506,533.99552 494.29546,534.85582 493.28736,535.71057 492.28076,536.55977 491.27536,537.40347 490.27096,538.24167 489.26736,539.07441 488.26456,539.90172 487.26226,540.72362 486.26036,541.54014 485.25866,542.3513 484.25706,543.1571 483.25546,543.95759 482.25376,544.75277 481.25176,545.54268 480.24926,546.32732 479.24636,547.10673 478.24276,547.8809 477.23856,548.64987 476.23346,549.41365 475.22746,550.17227 474.22056,550.92572 473.21246,551.67404 472.20326,552.41725 471.19286,553.15535 470.18086,553.88837 469.16776,554.61631 468.15296,555.33919 467.13686,556.05704 466.11896,556.76987 465.09946,557.47769 464.07826,558.18052 463.05516,558.87839 462.03016,559.57128 461.00336,560.25924 459.97446,560.94229 458.94366,561.62042 457.91076,562.29366 456.87556,562.96202 455.83836,563.62554 454.79886,564.28422 453.75716,564.93808 452.71296,565.58714 451.66646,566.23143 450.61766,566.87095 449.56616,567.50573 448.51236,568.13579 447.45586,568.76116 446.39686,569.38184 445.33516,569.99787 444.27086,570.60927 443.20386,571.21606 442.13406,571.81827 441.06146,572.41593 439.98596,573.00905 438.90776,573.59767 437.82656,574.18182 436.74236,574.76151 435.65526,575.3368 434.56506,575.9077 433.47186,576.47424 432.37546,577.03646 431.27586,577.5944 430.17316,578.14809 429.06726,578.69756 427.95796,579.24286 426.84556,579.78402 425.72966,580.3211 424.61026,580.85412 423.48746,581.38314 422.36136,581.9082 421.23146,582.42935 420.09806,582.94665 418.96116,583.46015 417.82046,583.96988 416.67596,584.47593 415.52766,584.97834 414.37556,585.47718 413.21966,585.97251 412.05966,586.4644 410.89566,586.95292 409.72756,587.43814 408.55536,587.92015 407.37886,588.39902 406.19816,588.87483 405.01316,589.34767 403.82356,589.81762 402.62946,590.28479 401.43076,590.74927 400.22756,591.21118 399.01946,591.67061 397.80646,592.12768 396.58856,592.58251 395.36566,593.03522 394.13756,593.48594 392.90426,593.93482 391.66546,594.38199 390.42116,594.82761 389.17136,595.27183 387.91566,595.71482 386.65416,596.15676 385.38656,596.59782 384.11286,597.03822 382.83276,597.47813 381.54616,597.9178 380.25286,598.35743 378.95266,598.79727 377.64536,599.23757 376.33086,599.67859 375.00886,600.12062 373.67916,600.56398 372.34146,601.00894 370.99546,601.45588 369.64106,601.90513 368.27776,602.35708 366.90546,602.81212 365.52366,603.27069 364.13216,603.73324 362.73056,604.20026 361.31836,604.67225 359.89526,605.14979 358.46076,605.63346 357.01456,606.1239 355.55586,606.62178 354.0842,607.12785 352.59912,607.64287 351.09992,608.16772 349.58593,608.7033 348.05643,609.25061 346.51063,609.81071 344.94769,610.38478 343.36669,610.97406 341.76663,611.57996 340.14644,612.20395 338.50494,612.84771 336.84084,613.51302 335.15273,614.20188 333.43907,614.91647 331.69815,615.65921 329.92811,616.43279 328.12686,617.24018 326.29209,618.08473 324.42122,618.97016 322.51137,619.90067 320.55932,620.88102 318.56139,621.91658 316.51345,623.0135 314.41075,624.17883 312.24788,625.42069 310.01856,626.74852 307.71552,628.17335 305.33024,629.70816 302.85262,631.3684 300.27069,633.1726 297.56994,635.14321 294.73276,637.30776 291.73733,639.70055 288.55627,642.36484 285.1546,645.35633 281.48667,648.74813 277.49137,652.63879 273.08447,657.1651 268.14536,662.52416 262.49315,669.01363 255.8394,677.11151 247.68406,687.65223 237.04834,702.28078 221.60319,724.94027 193.93942,768.22827 185.55216,776.33775 188.38154,765.01943 212.03817,719.41791 223.93927,694.71228 231.29011,678.1872 236.34097,665.8541 240.02706,656.04285 242.82101,647.90316 244.99253,640.94624 246.70898,634.86659 248.08075,629.46124 249.18418,624.58882 250.07403,620.14715 250.79084,616.06012 251.36534,612.2696 251.82131,608.73025 252.17754,605.40603 252.44905,602.2679 252.64805,599.29211 252.78461,596.45897 252.86702,593.75206 252.90229,591.15751 252.89634,588.66347 252.85419,586.25983 252.78018,583.93779 252.67804,581.68975 252.55101,579.50905 252.40194,577.38981 252.2333,575.32688 252.04731,573.31565 251.84591,571.35202 251.63082,569.43233 251.4036,567.55328 251.16562,565.71191 250.91813,563.90554 250.66226,562.13173 250.39902,560.38827 250.12933,558.67314 249.85402,556.98451 249.57386,555.32068 249.28954,553.6801 249.00171,552.06135 248.71094,550.4631 248.41778,548.88416 248.1227,547.3234 247.82619,545.77976 247.52866,544.25229 247.23049,542.74008 246.93205,541.24232 246.63368,539.75819 246.33569,538.28699 246.03837,536.82802 245.742,535.38065 245.44682,533.94429 245.15308,532.51838 244.861,531.10239 244.57077,529.69582 244.28261,528.2982 243.99669,526.9091 243.71318,525.52811 243.43226,524.15484 243.15406,522.78891 242.87873,521.42998 242.60641,520.07771 242.33723,518.73181 242.07131,517.39195 241.80877,516.05789 241.5497,514.72933 241.29421,513.40605 241.04241,512.08777 240.79437,510.77429 240.55021,509.46538 240.30998,508.16085 240.07377,506.8605 239.84166,505.56412 239.61371,504.27155 239.39,502.98262 239.17059,501.69716 238.95554,500.41502 238.7449,499.13605 238.53874,497.86011 238.3371,496.58705 238.14003,495.31676 237.9476,494.0491 237.75982,492.78396 237.57676,491.52122 237.39845,490.26077 237.22494,489.00251 237.05625,487.74633 236.89244,486.49213 236.73351,485.23982 236.57952,483.98931 236.43049,482.74052 236.28645,481.49336 236.14743,480.24773 236.01345,479.00359 235.88455,477.76083 235.76074,476.5194 235.64203,475.27922 235.52847,474.04021 235.42007,472.80232 235.31684,471.56548 235.2188,470.32962 235.12597,469.09468 235.03836,467.86062 234.95599,466.62736 234.87888,465.39485 234.80703,464.16303 234.74046,462.93185 234.67917,461.70126 234.62319,460.4712 234.5725,459.24163 234.52714,458.01249 234.48709,456.78373 234.45238,455.5553 234.42298,454.32716 234.39894,453.09925 234.38023,451.87153 234.36687,450.64395 234.35884,449.41647 234.35617,448.18904 234.35884,446.96161 234.36687,445.73412 234.38023,444.50654 234.39894,443.27883 234.42298,442.05092 234.45238,440.82278 234.48709,439.59435 234.52714,438.36559 234.5725,437.13645 234.62319,435.90687 234.67917,434.67682 234.74046,433.44623 234.80703,432.21505 234.87888,430.98323 234.95599,429.75072 235.03836,428.51746 235.12597,427.28339 235.2188,426.04845 235.31684,424.8126 235.42007,423.57576 235.52847,422.33787 235.64203,421.09885 235.76074,419.85868 235.88455,418.61725 236.01345,417.37449 236.14743,416.13035 236.28645,414.88472 236.43049,413.63756 236.57952,412.38877 236.73351,411.13826 236.89244,409.88594 237.05625,408.63174 237.22494,407.37557 237.39845,406.1173 237.57676,404.85686 237.75982,403.59412 237.9476,402.32898 238.14003,401.06132 238.3371,399.79102 238.53874,398.51797 238.7449,397.24203 238.95554,395.96306 239.17059,394.68092 239.39,393.39546 239.61371,392.10653 239.84166,390.81396 240.07377,389.51758 240.30998,388.21723 240.55021,386.9127 240.79437,385.60379 241.04241,384.29031 241.29421,382.97203 241.5497,381.64874 241.80877,380.32019 242.07131,378.98612 242.33723,377.64627 242.60641,376.30037 242.87873,374.9481 243.15406,373.58917 243.43226,372.22324 243.71318,370.84997 243.99669,369.46898 244.28261,368.07988 244.57077,366.68226 244.861,365.27569 245.15308,363.8597 245.44682,362.43379 245.742,360.99743 246.03837,359.55006 246.33569,358.09109 246.63368,356.61989 246.93205,355.13576 247.23049,353.63799 247.52866,352.12579 247.82619,350.59832 248.1227,349.05468 248.41778,347.49392 248.71094,345.91497 249.00171,344.31673 249.28954,342.69798 249.57386,341.0574 249.85402,339.39357 250.12933,337.70494 250.39902,335.98981 250.66226,334.24635 250.91813,332.47254 251.16562,330.66616 251.4036,328.8248 251.63082,326.94575 251.84591,325.02606 252.04731,323.06243 252.2333,321.0512 252.40194,318.98826 252.55101,316.86903 252.67804,314.68833 252.78018,312.44029 252.85419,310.11826 252.89634,307.7146 252.90229,305.22057 252.86702,302.62601 252.78461,299.9191 252.64805,297.08597 252.44905,294.11017 252.17754,290.97204 251.82131,287.64783 251.36534,284.10847 250.79084,280.31796 250.07403,276.23093 249.18418,271.78927 248.08075,266.91684 246.70898,261.51148 244.99253,255.43184 242.82101,248.47492 240.02706,240.33523 236.34097,230.52398 231.29011,218.19088 223.93927,201.66581 212.03817,176.96017 188.38154,131.35865 185.55216,120.04033 193.93942,128.14981 221.60319,171.43781 237.04834,194.09729 247.68406,208.72585 255.8394,219.26657 262.49315,227.36444 268.14536,233.85392 273.08447,239.21298 277.49137,243.73928 281.48667,247.62995 285.1546,251.02176 288.55627,254.01323 291.73733,256.67753 294.73276,259.07032 297.56994,261.23487 300.27069,263.20547 302.85262,265.00968 305.33024,266.66992 307.71552,268.20473 310.01856,269.62956 312.24788,270.95739 314.41075,272.19925 316.51345,273.36458 318.56139,274.4615 320.55932,275.49706 322.51137,276.47741 324.42122,277.40792 326.29209,278.29335 328.12686,279.1379 329.92811,279.94529 331.69815,280.71887 333.43907,281.46161 335.15273,282.1762 336.84084,282.86506 338.50494,283.53037 340.14644,284.17413 341.76663,284.79812 343.36669,285.40401 344.94769,285.99331 346.51063,286.56736 348.05643,287.12747 349.58593,287.67477 351.09992,288.21036 352.59912,288.73521 354.0842,289.25023 355.55586,289.7563 357.01456,290.25419 358.46076,290.74462 359.89526,291.22828 361.31836,291.70583 362.73056,292.17782 364.13216,292.64484 365.52366,293.10739 366.90546,293.56596 368.27776,294.021 369.64106,294.47295 370.99546,294.9222 372.34146,295.36913 373.67916,295.81411 375.00886,296.25745 376.33086,296.69948 377.64536,297.14051 378.95266,297.58081 380.25286,298.02065 381.54616,298.46028 382.83276,298.89995 384.11286,299.33987 385.38656,299.78026 386.65416,300.22132 387.91566,300.66326 389.17136,301.10625 390.42116,301.55047 391.66546,301.99609 392.90426,302.44326 394.13756,302.89214 395.36566,303.34286 396.58856,303.79557 397.80646,304.2504 399.01946,304.70747 400.22756,305.1669 401.43076,305.62881 402.62946,306.09329 403.82356,306.56046 405.01316,307.03041 406.19816,307.50325 407.37886,307.97905 408.55536,308.45793 409.72756,308.93994 410.89566,309.42516 412.05966,309.91368 413.21966,310.40557 414.37556,310.9009 415.52766,311.39974 416.67596,311.90215 417.82046,312.4082 418.96116,312.91794 420.09806,313.43143 421.23146,313.94872 422.36136,314.46988 423.48746,314.99494 424.61026,315.52396 425.72966,316.05698 426.84556,316.59405 427.95796,317.13522 429.06726,317.68052 430.17316,318.22999 431.27586,318.78368 432.37546,319.34162 433.47186,319.90384 434.56506,320.47038 435.65526,321.04128 436.74236,321.61657 437.82656,322.19626 438.90776,322.78041 439.98596,323.36903 441.06146,323.96215 442.13406,324.55981 443.20386,325.16201 444.27086,325.7688 445.33516,326.3802 446.39686,326.99624 447.45586,327.61692 448.51236,328.24229 449.56616,328.87235 450.61766,329.50713 451.66646,330.14665 452.71296,330.79094 453.75716,331.44 454.79886,332.09386 455.83836,332.75254 456.87556,333.41606 457.91076,334.08443 458.94366,334.75766 459.97446,335.43579 461.00336,336.11884 462.03016,336.80679 463.05516,337.49969 464.07826,338.19756 465.09946,338.90038 466.11896,339.60821 467.13686,340.32104 468.15296,341.03889 469.16776,341.76177 470.18086,342.48971 471.19286,343.22273 472.20326,343.96083 473.21246,344.70404 474.22056,345.45236 475.22746,346.20582 476.23346,346.96443 477.23856,347.72821 478.24276,348.49718 479.24636,349.27136 480.24926,350.05076 481.25176,350.8354 482.25376,351.62531 483.25546,352.42049 484.25706,353.22098 485.25866,354.02678 486.26036,354.83794 487.26226,355.65446 488.26456,356.47636 489.26736,357.30366 490.27096,358.13641 491.27536,358.97461 492.28076,359.8183 493.28736,360.6675 494.29546,361.52225 495.30506,362.38256 496.31656,363.24847 497.33006,364.12001 498.34586,364.99721 499.36406,365.88011 500.38506,366.76874 501.40906,367.66316 502.43646,368.56337 503.46756,369.46945 504.50236,370.3814 505.54166,371.29931 506.58546,372.2232 507.63426,373.15313 508.68846,374.08915 509.74856,375.03132 510.81486,375.97969 511.88776,376.93431 512.96806,377.89526 514.05606,378.8626 515.15246,379.83641 516.25766,380.81675 517.37246,381.80372 518.49756,382.79738 519.63366,383.79785 520.78156,384.80519 521.94216,385.81951 523.11616,386.84092 524.30476,387.86953 525.50886,388.90544 526.72976,389.94881 527.96846,390.99974 529.22636,392.0584 530.50506,393.12491 531.80576,394.19945 533.13066,395.28219 534.48106,396.37332 535.85936,397.47302 537.26766,398.58152 538.70826,399.69904 540.18386,400.82581 541.69756,401.96212 543.25256,403.10824 544.85246,404.26446 546.50116,405.43116 548.20346,406.60866 549.96426,407.79738 551.78926,408.99774 553.68506,410.21022 555.65896,411.43533 557.71956,412.67365 559.87646,413.92583 562.14106,415.19255 564.52646,416.47463 567.04836,417.77294 569.72496,419.08849 572.57846,420.42242 575.63536,421.77603 578.92856,423.15082 582.49846,424.54856 586.39636,425.97129 590.68786,427.42149 595.45916,428.9021 600.82626,430.41679 606.94966,431.97013 614.06026,433.568 622.50646,435.21822 632.84626,436.93159 646.05236,438.72397 664.03896,440.62049 691.38526,442.66664 742.70566,444.98018 753.92226,448.18902" id="path4" inkscape:connector-curvature="0"></path></svg>'},,,,function(t,e,s){"use strict";s.r(e);var r={CircleDiameter:4,BiasTowards:"Center",MaxWalkers:4e3,ShowWalkers:!1,WalkerSource:"Edges",EdgeMargin:200},i=s(1),n=s(3);let o,a={dla:s(6),polygons:s(7),supershape:s(8)},h=a.supershape;new p5((function(t){function e(){o.removeAll(),function(t){let e=n.a.loadFromFileContents(t);for(let t of e)t.stuck=!0,t.solid=!1,t.x+=window.innerWidth/2-450,t.y+=window.innerHeight/2-450;o.createShapesFromPaths(e)}(h),o.createDefaultWalkers(),o.createDefaultWalkers(void 0,"Offscreen")}t.setup=function(){t.createCanvas(window.innerWidth,window.innerHeight),t.colorMode(t.HSB,255),t.ellipseMode(t.CENTER),o=new i.a(t,r),e()},t.draw=function(){o.iterate(),o.draw(),t.fill(0),t.noStroke(),t.textSize(20),t.textStyle(t.BOLD),t.text("05 - SVG input",20,40),t.textStyle(t.NORMAL),t.fill(150),t.text("Growth using shapes from SVG files\n\nKey commands:\n1 - SVG text\n2 - compound polygon\n3 - supershape",20,70)},t.keyReleased=function(){switch(t.key){case" ":o.togglePause();break;case"w":o.toggleShowWalkers();break;case"c":o.toggleShowClusters();break;case"r":e();break;case"f":o.toggleUseFrame(),e();break;case"s":o.toggleShowShapes(),restartWorld();break;case"l":o.toggleLineRenderingMode();break;case"e":o.export();break;case"1":h=a.dla,e();break;case"2":h=a.polygons,e();break;case"3":h=a.supershape,e()}}}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,